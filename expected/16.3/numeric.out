--
-- NUMERIC
--
\set ECHO none
--Testcase 1:
CREATE EXTENSION griddb_fdw;
--Testcase 2:
CREATE SERVER griddb_svr FOREIGN DATA WRAPPER griddb_fdw OPTIONS (host :GRIDDB_HOST, port :GRIDDB_PORT, clustername :CLUSTER_NAME);
--Testcase 3:
CREATE USER MAPPING FOR public SERVER griddb_svr OPTIONS (username :GRIDDB_USER, password :GRIDDB_PASS);
--Testcase 4:
CREATE FOREIGN TABLE num_data (idx serial, id int4, val float8) SERVER griddb_svr;
--Testcase 5:
CREATE FOREIGN TABLE num_exp_add (idx serial, id1 int4, id2 int4, expected float8) SERVER griddb_svr;
--Testcase 6:
CREATE FOREIGN TABLE num_exp_sub (idx serial, id1 int4, id2 int4, expected float8) SERVER griddb_svr;
--Testcase 7:
CREATE FOREIGN TABLE num_exp_div (idx serial, id1 int4, id2 int4, expected float8) SERVER griddb_svr;
--Testcase 8:
CREATE FOREIGN TABLE num_exp_mul (idx serial, id1 int4, id2 int4, expected float8) SERVER griddb_svr;
--Testcase 9:
CREATE FOREIGN TABLE num_exp_sqrt (idx serial, id int4, expected float8) SERVER griddb_svr;
--Testcase 10:
CREATE FOREIGN TABLE num_exp_ln (idx serial, id int4, expected float8) SERVER griddb_svr;
--Testcase 11:
CREATE FOREIGN TABLE num_exp_log10 (idx serial, id int4, expected float8) SERVER griddb_svr;
--Testcase 12:
CREATE FOREIGN TABLE num_exp_power_10_ln (idx serial, id int4, expected float8) SERVER griddb_svr;
--Testcase 13:
CREATE FOREIGN TABLE num_result (idx serial OPTIONS (rowkey 'true'), id1 int4, id2 int4, result float8) SERVER griddb_svr;
-- ******************************
-- * The following EXPECTED results are computed by bc(1)
-- * with a scale of 200
-- ******************************
BEGIN TRANSACTION;
--Testcase 14:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,0,'0');
--Testcase 15:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,0,'0');
--Testcase 16:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,0,'0');
--Testcase 17:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,0,'NaN');
--Testcase 18:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,1,'0');
--Testcase 19:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,1,'0');
--Testcase 20:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,1,'0');
--Testcase 21:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,1,'NaN');
--Testcase 22:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,2,'-34338492.215397047');
--Testcase 23:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,2,'34338492.215397047');
--Testcase 24:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,2,'0');
--Testcase 25:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,2,'0');
--Testcase 26:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,3,'4.31');
--Testcase 27:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,3,'-4.31');
--Testcase 28:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,3,'0');
--Testcase 29:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,3,'0');
--Testcase 30:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,4,'7799461.4119');
--Testcase 31:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,4,'-7799461.4119');
--Testcase 32:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,4,'0');
--Testcase 33:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,4,'0');
--Testcase 34:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,5,'16397.038491');
--Testcase 35:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,5,'-16397.038491');
--Testcase 36:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,5,'0');
--Testcase 37:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,5,'0');
--Testcase 38:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,6,'93901.57763026');
--Testcase 39:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,6,'-93901.57763026');
--Testcase 40:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,6,'0');
--Testcase 41:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,6,'0');
--Testcase 42:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,7,'-83028485');
--Testcase 43:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,7,'83028485');
--Testcase 44:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,7,'0');
--Testcase 45:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,7,'0');
--Testcase 46:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,8,'74881');
--Testcase 47:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,8,'-74881');
--Testcase 48:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,8,'0');
--Testcase 49:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,8,'0');
--Testcase 50:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (0,9,'-24926804.045047420');
--Testcase 51:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (0,9,'24926804.045047420');
--Testcase 52:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (0,9,'0');
--Testcase 53:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (0,9,'0');
--Testcase 54:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,0,'0');
--Testcase 55:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,0,'0');
--Testcase 56:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,0,'0');
--Testcase 57:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,0,'NaN');
--Testcase 58:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,1,'0');
--Testcase 59:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,1,'0');
--Testcase 60:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,1,'0');
--Testcase 61:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,1,'NaN');
--Testcase 62:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,2,'-34338492.215397047');
--Testcase 63:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,2,'34338492.215397047');
--Testcase 64:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,2,'0');
--Testcase 65:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,2,'0');
--Testcase 66:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,3,'4.31');
--Testcase 67:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,3,'-4.31');
--Testcase 68:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,3,'0');
--Testcase 69:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,3,'0');
--Testcase 70:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,4,'7799461.4119');
--Testcase 71:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,4,'-7799461.4119');
--Testcase 72:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,4,'0');
--Testcase 73:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,4,'0');
--Testcase 74:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,5,'16397.038491');
--Testcase 75:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,5,'-16397.038491');
--Testcase 76:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,5,'0');
--Testcase 77:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,5,'0');
--Testcase 78:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,6,'93901.57763026');
--Testcase 79:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,6,'-93901.57763026');
--Testcase 80:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,6,'0');
--Testcase 81:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,6,'0');
--Testcase 82:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,7,'-83028485');
--Testcase 83:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,7,'83028485');
--Testcase 84:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,7,'0');
--Testcase 85:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,7,'0');
--Testcase 86:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,8,'74881');
--Testcase 87:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,8,'-74881');
--Testcase 88:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,8,'0');
--Testcase 89:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,8,'0');
--Testcase 90:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (1,9,'-24926804.045047420');
--Testcase 91:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (1,9,'24926804.045047420');
--Testcase 92:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (1,9,'0');
--Testcase 93:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (1,9,'0');
--Testcase 94:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,0,'-34338492.215397047');
--Testcase 95:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,0,'-34338492.215397047');
--Testcase 96:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,0,'0');
--Testcase 97:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,0,'NaN');
--Testcase 98:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,1,'-34338492.215397047');
--Testcase 99:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,1,'-34338492.215397047');
--Testcase 100:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,1,'0');
--Testcase 101:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,1,'NaN');
--Testcase 102:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,2,'-68676984.430794094');
--Testcase 103:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,2,'0');
--Testcase 104:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,2,'1179132047626883.596862135856320209');
--Testcase 105:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,2,'1.00000000000000000000');
--Testcase 106:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,3,'-34338487.905397');
--Testcase 107:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,3,'-34338496.525397047');
--Testcase 108:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,3,'-147998901.44836127257');
--Testcase 109:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,3,'-7967167.56737751');
--Testcase 110:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,4,'-26539030.803497047');
--Testcase 111:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,4,'-42137953.627297047');
--Testcase 112:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,4,'-267821744976817.8111137106593');
--Testcase 113:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,4,'-4.40267480046830116685');
--Testcase 114:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,5,'-34322095.176906047');
--Testcase 115:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,5,'-34354889.253888047');
--Testcase 116:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,5,'-563049578578.769242506736077');
--Testcase 117:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,5,'-2094.18866914563535496429');
--Testcase 118:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,6,'-34244590.637766787');
--Testcase 119:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,6,'-34432393.793027307');
--Testcase 120:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,6,'-3224438592470.18449811926184222');
--Testcase 121:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,6,'-365.68599891479766440940');
--Testcase 122:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,7,'-117366977.215397047');
--Testcase 123:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,7,'48689992.784602953');
--Testcase 124:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,7,'2851072985828710.485883795');
--Testcase 125:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,7,'.41357483778485235518');
--Testcase 126:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,8,'-34263611.215397047');
--Testcase 127:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,8,'-34413373.215397047');
--Testcase 128:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,8,'-2571300635581.146276407');
--Testcase 129:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,8,'-458.57416721727870888476');
--Testcase 130:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (2,9,'-59265296.260444467');
--Testcase 131:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (2,9,'-9411688.17034962');
--Testcase 132:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (2,9,'855948866655588.453741509242968740');
--Testcase 133:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (2,9,'1.37757299946438931811');
--Testcase 134:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,0,'4.31');
--Testcase 135:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,0,'4.31');
--Testcase 136:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,0,'0');
--Testcase 137:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,0,'NaN');
--Testcase 138:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,1,'4.31');
--Testcase 139:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,1,'4.31');
--Testcase 140:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,1,'0');
--Testcase 141:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,1,'NaN');
--Testcase 142:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,2,'-34338487.905397');
--Testcase 143:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,2,'34338496.525397047');
--Testcase 144:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,2,'-147998901.44836127257');
--Testcase 145:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,2,'-.000000125515120843525');
--Testcase 146:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,3,'8.62');
--Testcase 147:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,3,'0');
--Testcase 148:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,3,'18.5761');
--Testcase 149:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,3,'1.00000000000000000000');
--Testcase 150:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,4,'7799465.7219');
--Testcase 151:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,4,'-7799457.1019');
--Testcase 152:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,4,'33615678.685289');
--Testcase 153:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,4,'.000000552602259615521');
--Testcase 154:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,5,'16401.348491');
--Testcase 155:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,5,'-16392.728491');
--Testcase 156:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,5,'70671.23589621');
--Testcase 157:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,5,'.00026285234387695504');
--Testcase 158:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,6,'93905.88763026');
--Testcase 159:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,6,'-93897.26763026');
--Testcase 160:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,6,'404715.7995864206');
--Testcase 161:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,6,'.0000458991223445759');
--Testcase 162:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,7,'-83028480.69');
--Testcase 163:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,7,'83028489.31');
--Testcase 164:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,7,'-357852770.35');
--Testcase 165:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,7,'-.000000051909895742407');
--Testcase 166:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,8,'74885.31');
--Testcase 167:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,8,'-74876.69');
--Testcase 168:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,8,'322737.11');
--Testcase 169:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,8,'.00005755799201399553');
--Testcase 170:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (3,9,'-24926799.735047420');
--Testcase 171:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (3,9,'24926808.355047420');
--Testcase 172:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (3,9,'-107434525.43415438020');
--Testcase 173:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (3,9,'-.00000017290624149855');
--Testcase 174:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,0,'7799461.4119');
--Testcase 175:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,0,'7799461.4119');
--Testcase 176:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,0,'0');
--Testcase 177:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,0,'NaN');
--Testcase 178:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,1,'7799461.4119');
--Testcase 179:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,1,'7799461.4119');
--Testcase 180:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,1,'0');
--Testcase 181:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,1,'NaN');
--Testcase 182:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,2,'-26539030.803497047');
--Testcase 183:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,2,'42137953.627297047');
--Testcase 184:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,2,'-267821744976817.8111137106593');
--Testcase 185:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,2,'-.22713465002993920385');
--Testcase 186:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,3,'7799465.7219');
--Testcase 187:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,3,'7799457.1019');
--Testcase 188:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,3,'33615678.685289');
--Testcase 189:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,3,'1809619.81714617169373549883');
--Testcase 190:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,4,'15598922.8238');
--Testcase 191:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,4,'0');
--Testcase 192:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,4,'60831598315717.14146161');
--Testcase 193:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,4,'1.00000000000000000000');
--Testcase 194:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,5,'7815858.450391');
--Testcase 195:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,5,'7783064.373409');
--Testcase 196:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,5,'127888068979.9935054429');
--Testcase 197:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,5,'475.66281046305802686061');
--Testcase 198:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,6,'7893362.98953026');
--Testcase 199:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,6,'7705559.83426974');
--Testcase 200:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,6,'732381731243.745115764094');
--Testcase 201:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,6,'83.05996138436129499606');
--Testcase 202:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,7,'-75229023.5881');
--Testcase 203:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,7,'90827946.4119');
--Testcase 204:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,7,'-647577464846017.9715');
--Testcase 205:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,7,'-.09393717604145131637');
--Testcase 206:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,8,'7874342.4119');
--Testcase 207:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,8,'7724580.4119');
--Testcase 208:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,8,'584031469984.4839');
--Testcase 209:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,8,'104.15808298366741897143');
--Testcase 210:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (4,9,'-17127342.633147420');
--Testcase 211:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (4,9,'32726265.456947420');
--Testcase 212:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (4,9,'-194415646271340.1815956522980');
--Testcase 213:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (4,9,'-.31289456112403769409');
--Testcase 214:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,0,'16397.038491');
--Testcase 215:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,0,'16397.038491');
--Testcase 216:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,0,'0');
--Testcase 217:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,0,'NaN');
--Testcase 218:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,1,'16397.038491');
--Testcase 219:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,1,'16397.038491');
--Testcase 220:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,1,'0');
--Testcase 221:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,1,'NaN');
--Testcase 222:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,2,'-34322095.176906047');
--Testcase 223:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,2,'34354889.253888047');
--Testcase 224:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,2,'-563049578578.769242506736077');
--Testcase 225:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,2,'-.00047751189505192446');
--Testcase 226:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,3,'16401.348491');
--Testcase 227:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,3,'16392.728491');
--Testcase 228:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,3,'70671.23589621');
--Testcase 229:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,3,'3804.41728329466357308584');
--Testcase 230:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,4,'7815858.450391');
--Testcase 231:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,4,'-7783064.373409');
--Testcase 232:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,4,'127888068979.9935054429');
--Testcase 233:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,4,'.00210232958726897192');
--Testcase 234:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,5,'32794.076982');
--Testcase 235:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,5,'0');
--Testcase 236:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,5,'268862871.275335557081');
--Testcase 237:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,5,'1.00000000000000000000');
--Testcase 238:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,6,'110298.61612126');
--Testcase 239:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,6,'-77504.53913926');
--Testcase 240:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,6,'1539707782.76899778633766');
--Testcase 241:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,6,'.17461941433576102689');
--Testcase 242:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,7,'-83012087.961509');
--Testcase 243:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,7,'83044882.038491');
--Testcase 244:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,7,'-1361421264394.416135');
--Testcase 245:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,7,'-.00019748690453643710');
--Testcase 246:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,8,'91278.038491');
--Testcase 247:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,8,'-58483.961509');
--Testcase 248:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,8,'1227826639.244571');
--Testcase 249:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,8,'.21897461960978085228');
--Testcase 250:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (5,9,'-24910407.006556420');
--Testcase 251:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (5,9,'24943201.083538420');
--Testcase 252:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (5,9,'-408725765384.257043660243220');
--Testcase 253:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (5,9,'-.00065780749354660427');
--Testcase 254:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,0,'93901.57763026');
--Testcase 255:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,0,'93901.57763026');
--Testcase 256:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,0,'0');
--Testcase 257:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,0,'NaN');
--Testcase 258:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,1,'93901.57763026');
--Testcase 259:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,1,'93901.57763026');
--Testcase 260:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,1,'0');
--Testcase 261:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,1,'NaN');
--Testcase 262:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,2,'-34244590.637766787');
--Testcase 263:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,2,'34432393.793027307');
--Testcase 264:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,2,'-3224438592470.18449811926184222');
--Testcase 265:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,2,'-.00273458651128995823');
--Testcase 266:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,3,'93905.88763026');
--Testcase 267:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,3,'93897.26763026');
--Testcase 268:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,3,'404715.7995864206');
--Testcase 269:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,3,'21786.90896293735498839907');
--Testcase 270:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,4,'7893362.98953026');
--Testcase 271:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,4,'-7705559.83426974');
--Testcase 272:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,4,'732381731243.745115764094');
--Testcase 273:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,4,'.01203949512295682469');
--Testcase 274:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,5,'110298.61612126');
--Testcase 275:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,5,'77504.53913926');
--Testcase 276:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,5,'1539707782.76899778633766');
--Testcase 277:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,5,'5.72674008674192359679');
--Testcase 278:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,6,'187803.15526052');
--Testcase 279:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,6,'0');
--Testcase 280:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,6,'8817506281.45174');
--Testcase 281:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,6,'1.00000000000000000000');
--Testcase 282:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,7,'-82934583.42236974');
--Testcase 283:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,7,'83122386.57763026');
--Testcase 284:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,7,'-7796505729750.37795610');
--Testcase 285:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,7,'-.00113095617281538980');
--Testcase 286:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,8,'168782.57763026');
--Testcase 287:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,8,'19020.57763026');
--Testcase 288:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,8,'7031444034.53149906');
--Testcase 289:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,8,'1.25401073209839612184');
--Testcase 290:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (6,9,'-24832902.467417160');
--Testcase 291:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (6,9,'25020705.622677680');
--Testcase 292:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (6,9,'-2340666225110.29929521292692920');
--Testcase 293:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (6,9,'-.00376709254265256789');
--Testcase 294:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,0,'-83028485');
--Testcase 295:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,0,'-83028485');
--Testcase 296:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,0,'0');
--Testcase 297:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,0,'NaN');
--Testcase 298:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,1,'-83028485');
--Testcase 299:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,1,'-83028485');
--Testcase 300:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,1,'0');
--Testcase 301:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,1,'NaN');
--Testcase 302:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,2,'-117366977.215397047');
--Testcase 303:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,2,'-48689992.784602953');
--Testcase 304:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,2,'2851072985828710.485883795');
--Testcase 305:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,2,'2.41794207151503385700');
--Testcase 306:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,3,'-83028480.69');
--Testcase 307:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,3,'-83028489.31');
--Testcase 308:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,3,'-357852770.35');
--Testcase 309:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,3,'-19264149.65197215777262180974');
--Testcase 310:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,4,'-75229023.5881');
--Testcase 311:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,4,'-90827946.4119');
--Testcase 312:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,4,'-647577464846017.9715');
--Testcase 313:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,4,'-10.64541262725136247686');
--Testcase 314:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,5,'-83012087.961509');
--Testcase 315:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,5,'-83044882.038491');
--Testcase 316:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,5,'-1361421264394.416135');
--Testcase 317:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,5,'-5063.62688881730941836574');
--Testcase 318:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,6,'-82934583.42236974');
--Testcase 319:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,6,'-83122386.57763026');
--Testcase 320:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,6,'-7796505729750.37795610');
--Testcase 321:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,6,'-884.20756174009028770294');
--Testcase 322:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,7,'-166056970');
--Testcase 323:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,7,'0');
--Testcase 324:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,7,'6893729321395225');
--Testcase 325:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,7,'1.00000000000000000000');
--Testcase 326:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,8,'-82953604');
--Testcase 327:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,8,'-83103366');
--Testcase 328:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,8,'-6217255985285');
--Testcase 329:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,8,'-1108.80577182462841041118');
--Testcase 330:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (7,9,'-107955289.045047420');
--Testcase 331:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (7,9,'-58101680.954952580');
--Testcase 332:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (7,9,'2069634775752159.035758700');
--Testcase 333:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (7,9,'3.33089171198810413382');
--Testcase 334:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,0,'74881');
--Testcase 335:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,0,'74881');
--Testcase 336:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,0,'0');
--Testcase 337:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,0,'NaN');
--Testcase 338:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,1,'74881');
--Testcase 339:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,1,'74881');
--Testcase 340:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,1,'0');
--Testcase 341:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,1,'NaN');
--Testcase 342:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,2,'-34263611.215397047');
--Testcase 343:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,2,'34413373.215397047');
--Testcase 344:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,2,'-2571300635581.146276407');
--Testcase 345:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,2,'-.00218067233500788615');
--Testcase 346:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,3,'74885.31');
--Testcase 347:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,3,'74876.69');
--Testcase 348:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,3,'322737.11');
--Testcase 349:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,3,'17373.78190255220417633410');
--Testcase 350:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,4,'7874342.4119');
--Testcase 351:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,4,'-7724580.4119');
--Testcase 352:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,4,'584031469984.4839');
--Testcase 353:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,4,'.00960079113741758956');
--Testcase 354:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,5,'91278.038491');
--Testcase 355:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,5,'58483.961509');
--Testcase 356:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,5,'1227826639.244571');
--Testcase 357:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,5,'4.56673929509287019456');
--Testcase 358:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,6,'168782.57763026');
--Testcase 359:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,6,'-19020.57763026');
--Testcase 360:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,6,'7031444034.53149906');
--Testcase 361:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,6,'.79744134113322314424');
--Testcase 362:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,7,'-82953604');
--Testcase 363:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,7,'83103366');
--Testcase 364:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,7,'-6217255985285');
--Testcase 365:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,7,'-.00090187120721280172');
--Testcase 366:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,8,'149762');
--Testcase 367:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,8,'0');
--Testcase 368:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,8,'5607164161');
--Testcase 369:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,8,'1.00000000000000000000');
--Testcase 370:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (8,9,'-24851923.045047420');
--Testcase 371:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (8,9,'25001685.045047420');
--Testcase 372:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (8,9,'-1866544013697.195857020');
--Testcase 373:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (8,9,'-.00300403532938582735');
--Testcase 374:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,0,'-24926804.045047420');
--Testcase 375:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,0,'-24926804.045047420');
--Testcase 376:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,0,'0');
--Testcase 377:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,0,'NaN');
--Testcase 378:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,1,'-24926804.045047420');
--Testcase 379:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,1,'-24926804.045047420');
--Testcase 380:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,1,'0');
--Testcase 381:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,1,'NaN');
--Testcase 382:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,2,'-59265296.260444467');
--Testcase 383:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,2,'9411688.17034962');
--Testcase 384:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,2,'855948866655588.453741509242968740');
--Testcase 385:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,2,'.72591434384152961526');
--Testcase 386:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,3,'-24926799.735047420');
--Testcase 387:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,3,'-24926808.355047420');
--Testcase 388:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,3,'-107434525.43415438020');
--Testcase 389:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,3,'-5783481.21694835730858468677');
--Testcase 390:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,4,'-17127342.633147420');
--Testcase 391:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,4,'-32726265.456947420');
--Testcase 392:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,4,'-194415646271340.1815956522980');
--Testcase 393:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,4,'-3.19596478892958416484');
--Testcase 394:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,5,'-24910407.006556420');
--Testcase 395:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,5,'-24943201.083538420');
--Testcase 396:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,5,'-408725765384.257043660243220');
--Testcase 397:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,5,'-1520.20159364322004505807');
--Testcase 398:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,6,'-24832902.467417160');
--Testcase 399:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,6,'-25020705.622677680');
--Testcase 400:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,6,'-2340666225110.29929521292692920');
--Testcase 401:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,6,'-265.45671195426965751280');
--Testcase 402:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,7,'-107955289.045047420');
--Testcase 403:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,7,'58101680.954952580');
--Testcase 404:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,7,'2069634775752159.035758700');
--Testcase 405:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,7,'.30021990699995814689');
--Testcase 406:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,8,'-24851923.045047420');
--Testcase 407:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,8,'-25001685.045047420');
--Testcase 408:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,8,'-1866544013697.195857020');
--Testcase 409:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,8,'-332.88556569820675471748');
--Testcase 410:
INSERT INTO num_exp_add(id1, id2, expected) VALUES (9,9,'-49853608.090094840');
--Testcase 411:
INSERT INTO num_exp_sub(id1, id2, expected) VALUES (9,9,'0');
--Testcase 412:
INSERT INTO num_exp_mul(id1, id2, expected) VALUES (9,9,'621345559900192.420120630048656400');
--Testcase 413:
INSERT INTO num_exp_div(id1, id2, expected) VALUES (9,9,'1.00000000000000000000');
COMMIT TRANSACTION;
BEGIN TRANSACTION;
--Testcase 414:
INSERT INTO num_exp_sqrt(id, expected) VALUES (0,'0');
--Testcase 415:
INSERT INTO num_exp_sqrt(id, expected) VALUES (1,'0');
--Testcase 416:
INSERT INTO num_exp_sqrt(id, expected) VALUES (2,'5859.90547836712524903505');
--Testcase 417:
INSERT INTO num_exp_sqrt(id, expected) VALUES (3,'2.07605394920266944396');
--Testcase 418:
INSERT INTO num_exp_sqrt(id, expected) VALUES (4,'2792.75158435189147418923');
--Testcase 419:
INSERT INTO num_exp_sqrt(id, expected) VALUES (5,'128.05092147657509145473');
--Testcase 420:
INSERT INTO num_exp_sqrt(id, expected) VALUES (6,'306.43364311096782703406');
--Testcase 421:
INSERT INTO num_exp_sqrt(id, expected) VALUES (7,'9111.99676251039939975230');
--Testcase 422:
INSERT INTO num_exp_sqrt(id, expected) VALUES (8,'273.64392922189960397542');
--Testcase 423:
INSERT INTO num_exp_sqrt(id, expected) VALUES (9,'4992.67503899937593364766');
COMMIT TRANSACTION;
BEGIN TRANSACTION;
--Testcase 424:
INSERT INTO num_exp_ln(id, expected) VALUES (0,'NaN');
--Testcase 425:
INSERT INTO num_exp_ln(id, expected) VALUES (1,'NaN');
--Testcase 426:
INSERT INTO num_exp_ln(id, expected) VALUES (2,'17.35177750493897715514');
--Testcase 427:
INSERT INTO num_exp_ln(id, expected) VALUES (3,'1.46093790411565641971');
--Testcase 428:
INSERT INTO num_exp_ln(id, expected) VALUES (4,'15.86956523951936572464');
--Testcase 429:
INSERT INTO num_exp_ln(id, expected) VALUES (5,'9.70485601768871834038');
--Testcase 430:
INSERT INTO num_exp_ln(id, expected) VALUES (6,'11.45000246622944403127');
--Testcase 431:
INSERT INTO num_exp_ln(id, expected) VALUES (7,'18.23469429965478772991');
--Testcase 432:
INSERT INTO num_exp_ln(id, expected) VALUES (8,'11.22365546576315513668');
--Testcase 433:
INSERT INTO num_exp_ln(id, expected) VALUES (9,'17.03145425013166006962');
COMMIT TRANSACTION;
BEGIN TRANSACTION;
--Testcase 434:
INSERT INTO num_exp_log10(id, expected) VALUES (0,'NaN');
--Testcase 435:
INSERT INTO num_exp_log10(id, expected) VALUES (1,'NaN');
--Testcase 436:
INSERT INTO num_exp_log10(id, expected) VALUES (2,'7.53578122160797276459');
--Testcase 437:
INSERT INTO num_exp_log10(id, expected) VALUES (3,'.63447727016073160075');
--Testcase 438:
INSERT INTO num_exp_log10(id, expected) VALUES (4,'6.89206461372691743345');
--Testcase 439:
INSERT INTO num_exp_log10(id, expected) VALUES (5,'4.21476541614777768626');
--Testcase 440:
INSERT INTO num_exp_log10(id, expected) VALUES (6,'4.97267288886207207671');
--Testcase 441:
INSERT INTO num_exp_log10(id, expected) VALUES (7,'7.91922711353275546914');
--Testcase 442:
INSERT INTO num_exp_log10(id, expected) VALUES (8,'4.87437163556421004138');
--Testcase 443:
INSERT INTO num_exp_log10(id, expected) VALUES (9,'7.39666659961986567059');
COMMIT TRANSACTION;
BEGIN TRANSACTION;
--Testcase 444:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (0,'NaN');
--Testcase 445:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (1,'NaN');
--Testcase 446:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (2,'224790267919917955.13261618583642653184');
--Testcase 447:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (3,'28.90266599445155957393');
--Testcase 448:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (4,'7405685069594999.07733999469386277636');
--Testcase 449:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (5,'5068226527.32127265408584640098');
--Testcase 450:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (6,'281839893606.99372343357047819067');
--Testcase 451:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (7,'1716699575118597095.42330819910640247627');
--Testcase 452:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (8,'167361463828.07491320069016125952');
--Testcase 453:
INSERT INTO num_exp_power_10_ln(id, expected) VALUES (9,'107511333880052007.04141124673540337457');
COMMIT TRANSACTION;
BEGIN TRANSACTION;
--Testcase 454:
INSERT INTO num_data(id, val) VALUES (0, '0');
--Testcase 455:
INSERT INTO num_data(id, val) VALUES (1, '0');
--Testcase 456:
INSERT INTO num_data(id, val) VALUES (2, '-34338492.215397047');
--Testcase 457:
INSERT INTO num_data(id, val) VALUES (3, '4.31');
--Testcase 458:
INSERT INTO num_data(id, val) VALUES (4, '7799461.4119');
--Testcase 459:
INSERT INTO num_data(id, val) VALUES (5, '16397.038491');
--Testcase 460:
INSERT INTO num_data(id, val) VALUES (6, '93901.57763026');
--Testcase 461:
INSERT INTO num_data(id, val) VALUES (7, '-83028485');
--Testcase 462:
INSERT INTO num_data(id, val) VALUES (8, '74881');
--Testcase 463:
INSERT INTO num_data(id, val) VALUES (9, '-24926804.045047420');
COMMIT TRANSACTION;
-- ******************************
-- * Create indices for faster checks
-- ******************************
-- Skip these setting, creating foreign table with primary key already covered.
--CREATE UNIQUE INDEX num_exp_add_idx ON num_exp_add (id1, id2);
--CREATE UNIQUE INDEX num_exp_sub_idx ON num_exp_sub (id1, id2);
--CREATE UNIQUE INDEX num_exp_div_idx ON num_exp_div (id1, id2);
--CREATE UNIQUE INDEX num_exp_mul_idx ON num_exp_mul (id1, id2);
--CREATE UNIQUE INDEX num_exp_sqrt_idx ON num_exp_sqrt (id);
--CREATE UNIQUE INDEX num_exp_ln_idx ON num_exp_ln (id);
--CREATE UNIQUE INDEX num_exp_log10_idx ON num_exp_log10 (id);
--CREATE UNIQUE INDEX num_exp_power_10_ln_idx ON num_exp_power_10_ln (id);
--VACUUM ANALYZE num_exp_add;
--VACUUM ANALYZE num_exp_sub;
--VACUUM ANALYZE num_exp_div;
--VACUUM ANALYZE num_exp_mul;
--VACUUM ANALYZE num_exp_sqrt;
--VACUUM ANALYZE num_exp_ln;
--VACUUM ANALYZE num_exp_log10;
--VACUUM ANALYZE num_exp_power_10_ln;
-- ******************************
-- * Now check the behaviour of the NUMERIC type
-- ******************************
-- ******************************
-- * Addition check
-- ******************************
--Testcase 464:
DELETE FROM num_result;
--Testcase 465:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, t1.val + t2.val
    FROM num_data t1, num_data t2;
--Testcase 466:
SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_add t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

--Testcase 467:
DELETE FROM num_result;
--Testcase 468:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, round((t1.val + t2.val)::numeric, 10)
    FROM num_data t1, num_data t2;
--Testcase 469:
SELECT t1.id1, t1.id2, t1.result, round(t2.expected::numeric, 10) as expected
    FROM num_result t1, num_exp_add t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != round(t2.expected::numeric, 10);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

-- ******************************
-- * Subtraction check
-- ******************************
--Testcase 470:
DELETE FROM num_result;
--Testcase 471:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, t1.val - t2.val
    FROM num_data t1, num_data t2;
--Testcase 472:
SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_sub t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

--Testcase 473:
DELETE FROM num_result;
--Testcase 474:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, round((t1.val - t2.val)::numeric, 40)
    FROM num_data t1, num_data t2;
--Testcase 475:
SELECT t1.id1, t1.id2, t1.result, round(t2.expected::numeric, 40)
    FROM num_result t1, num_exp_sub t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != round(t2.expected::numeric, 40);
 id1 | id2 | result | round 
-----+-----+--------+-------
(0 rows)

-- ******************************
-- * Multiply check
-- ******************************
--Testcase 476:
DELETE FROM num_result;
--Testcase 477:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, t1.val * t2.val
    FROM num_data t1, num_data t2;
--Testcase 478:
SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_mul t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

--Testcase 479:
DELETE FROM num_result;
--Testcase 480:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, round((t1.val * t2.val)::numeric, 30)
    FROM num_data t1, num_data t2;
--Testcase 481:
SELECT t1.id1, t1.id2, t1.result, round(t2.expected::numeric, 30) as expected
    FROM num_result t1, num_exp_mul t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != round(t2.expected::numeric, 30);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

-- ******************************
-- * Division check
-- ******************************
--Testcase 482:
DELETE FROM num_result;
--Testcase 483:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, t1.val / t2.val
    FROM num_data t1, num_data t2
    WHERE t2.val != '0.0';
--Testcase 484:
SELECT t1.id1, t1.id2, t1.result, t2.expected
    FROM num_result t1, num_exp_div t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

--Testcase 485:
DELETE FROM num_result;
--Testcase 486:
INSERT INTO num_result(id1, id2, result) SELECT t1.id, t2.id, round((t1.val / t2.val)::numeric, 80)
    FROM num_data t1, num_data t2
    WHERE t2.val != '0.0';
--Testcase 487:
SELECT t1.id1, t1.id2, t1.result::numeric(210,80), round(t2.expected::numeric, 80) as expected
    FROM num_result t1, num_exp_div t2
    WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
    AND t1.result != round(t2.expected::numeric, 80);
 id1 | id2 | result | expected 
-----+-----+--------+----------
(0 rows)

-- ******************************
-- * Square root check
-- ******************************
--Testcase 488:
DELETE FROM num_result;
--Testcase 489:
INSERT INTO num_result(id1, id2, result) SELECT id, 0, SQRT(ABS(val))
    FROM num_data;
--Testcase 490:
SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_sqrt t2
    WHERE t1.id1 = t2.id
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | result | expected 
-----+--------+----------
(0 rows)

-- ******************************
-- * Natural logarithm check
-- ******************************
--Testcase 491:
DELETE FROM num_result;
--Testcase 492:
INSERT INTO num_result(id1, id2, result) SELECT id, 0, LN(ABS(val))
    FROM num_data
    WHERE val != '0.0';
--Testcase 493:
SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_ln t2
    WHERE t1.id1 = t2.id
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | result | expected 
-----+--------+----------
(0 rows)

-- ******************************
-- * Logarithm base 10 check
-- ******************************
--Testcase 494:
DELETE FROM num_result;
--Testcase 495:
INSERT INTO num_result(id1, id2, result) SELECT id, 0, LOG(numeric '10', ABS(val::numeric))
    FROM num_data
    WHERE val != '0.0';
--Testcase 496:
SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_log10 t2
    WHERE t1.id1 = t2.id
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 | result | expected 
-----+--------+----------
(0 rows)

-- ******************************
-- * POWER(10, LN(value)) check
-- ******************************
--Testcase 497:
DELETE FROM num_result;
--Testcase 498:
INSERT INTO num_result(id1, id2, result) SELECT id, 0, POWER(numeric '10', LN(ABS(round(val::numeric,200))))
    FROM num_data
    WHERE val != '0.0';
--Testcase 499:
SELECT t1.id1, t1.result, t2.expected
    FROM num_result t1, num_exp_power_10_ln t2
    WHERE t1.id1 = t2.id
    AND t1.result::numeric(210,10) != t2.expected::numeric(210,10);
 id1 |         result         |        expected        
-----+------------------------+------------------------
   2 | 2.2479026791991725e+17 | 2.2479026791991795e+17
(1 row)

-- ******************************
-- * Check behavior with Inf and NaN inputs.  It's easiest to handle these
-- * separately from the num_data framework used above, because some input
-- * combinations will throw errors.
-- ******************************
--Testcase 500:
create foreign table v (id serial options (rowkey 'true'), x float8) server griddb_svr;
BEGIN;
--Testcase 501:
DELETE FROM v;
--Testcase 502:
INSERT INTO v(x) VALUES ('0'::float8),('1'),('-1'),('4.2'),('inf'),('-inf'),('nan');
--Testcase 503:
SELECT x1::numeric, x2::numeric,
  x1::numeric + x2::numeric AS sum,
  x1::numeric - x2::numeric AS diff,
  x1::numeric * x2::numeric AS prod
FROM v AS v1(id, x1), v AS v2(id, x2);
    x1     |    x2     |    sum    |   diff    |   prod    
-----------+-----------+-----------+-----------+-----------
         0 |         0 |         0 |         0 |         0
         0 |         1 |         1 |        -1 |         0
         0 |        -1 |        -1 |         1 |         0
         0 |       4.2 |       4.2 |      -4.2 |       0.0
         0 |  Infinity |  Infinity | -Infinity |       NaN
         0 | -Infinity | -Infinity |  Infinity |       NaN
         0 |       NaN |       NaN |       NaN |       NaN
         1 |         0 |         1 |         1 |         0
         1 |         1 |         2 |         0 |         1
         1 |        -1 |         0 |         2 |        -1
         1 |       4.2 |       5.2 |      -3.2 |       4.2
         1 |  Infinity |  Infinity | -Infinity |  Infinity
         1 | -Infinity | -Infinity |  Infinity | -Infinity
         1 |       NaN |       NaN |       NaN |       NaN
        -1 |         0 |        -1 |        -1 |         0
        -1 |         1 |         0 |        -2 |        -1
        -1 |        -1 |        -2 |         0 |         1
        -1 |       4.2 |       3.2 |      -5.2 |      -4.2
        -1 |  Infinity |  Infinity | -Infinity | -Infinity
        -1 | -Infinity | -Infinity |  Infinity |  Infinity
        -1 |       NaN |       NaN |       NaN |       NaN
       4.2 |         0 |       4.2 |       4.2 |       0.0
       4.2 |         1 |       5.2 |       3.2 |       4.2
       4.2 |        -1 |       3.2 |       5.2 |      -4.2
       4.2 |       4.2 |       8.4 |       0.0 |     17.64
       4.2 |  Infinity |  Infinity | -Infinity |  Infinity
       4.2 | -Infinity | -Infinity |  Infinity | -Infinity
       4.2 |       NaN |       NaN |       NaN |       NaN
  Infinity |         0 |  Infinity |  Infinity |       NaN
  Infinity |         1 |  Infinity |  Infinity |  Infinity
  Infinity |        -1 |  Infinity |  Infinity | -Infinity
  Infinity |       4.2 |  Infinity |  Infinity |  Infinity
  Infinity |  Infinity |  Infinity |       NaN |  Infinity
  Infinity | -Infinity |       NaN |  Infinity | -Infinity
  Infinity |       NaN |       NaN |       NaN |       NaN
 -Infinity |         0 | -Infinity | -Infinity |       NaN
 -Infinity |         1 | -Infinity | -Infinity | -Infinity
 -Infinity |        -1 | -Infinity | -Infinity |  Infinity
 -Infinity |       4.2 | -Infinity | -Infinity | -Infinity
 -Infinity |  Infinity |       NaN | -Infinity | -Infinity
 -Infinity | -Infinity | -Infinity |       NaN |  Infinity
 -Infinity |       NaN |       NaN |       NaN |       NaN
       NaN |         0 |       NaN |       NaN |       NaN
       NaN |         1 |       NaN |       NaN |       NaN
       NaN |        -1 |       NaN |       NaN |       NaN
       NaN |       4.2 |       NaN |       NaN |       NaN
       NaN |  Infinity |       NaN |       NaN |       NaN
       NaN | -Infinity |       NaN |       NaN |       NaN
       NaN |       NaN |       NaN |       NaN |       NaN
(49 rows)

--Testcase 504:
SELECT x1, x2,
  x1::numeric / x2::numeric AS quot,
  x1::numeric % x2::numeric AS mod,
  div(x1::numeric, x2::numeric) AS div
FROM v AS v1(id, x1), v AS v2(id, x2) WHERE x2 != 0;
    x1     |    x2     |          quot           | mod  |    div    
-----------+-----------+-------------------------+------+-----------
         0 |         1 |  0.00000000000000000000 |    0 |         0
         0 |        -1 |  0.00000000000000000000 |    0 |         0
         0 |       4.2 |  0.00000000000000000000 |  0.0 |         0
         0 |  Infinity |                       0 |    0 |         0
         0 | -Infinity |                       0 |    0 |         0
         0 |       NaN |                     NaN |  NaN |       NaN
         1 |         1 |  1.00000000000000000000 |    0 |         1
         1 |        -1 | -1.00000000000000000000 |    0 |        -1
         1 |       4.2 |  0.23809523809523809524 |  1.0 |         0
         1 |  Infinity |                       0 |    1 |         0
         1 | -Infinity |                       0 |    1 |         0
         1 |       NaN |                     NaN |  NaN |       NaN
        -1 |         1 | -1.00000000000000000000 |    0 |        -1
        -1 |        -1 |  1.00000000000000000000 |    0 |         1
        -1 |       4.2 | -0.23809523809523809524 | -1.0 |         0
        -1 |  Infinity |                       0 |   -1 |         0
        -1 | -Infinity |                       0 |   -1 |         0
        -1 |       NaN |                     NaN |  NaN |       NaN
       4.2 |         1 |      4.2000000000000000 |  0.2 |         4
       4.2 |        -1 |     -4.2000000000000000 |  0.2 |        -4
       4.2 |       4.2 |  1.00000000000000000000 |  0.0 |         1
       4.2 |  Infinity |                       0 |  4.2 |         0
       4.2 | -Infinity |                       0 |  4.2 |         0
       4.2 |       NaN |                     NaN |  NaN |       NaN
  Infinity |         1 |                Infinity |  NaN |  Infinity
  Infinity |        -1 |               -Infinity |  NaN | -Infinity
  Infinity |       4.2 |                Infinity |  NaN |  Infinity
  Infinity |  Infinity |                     NaN |  NaN |       NaN
  Infinity | -Infinity |                     NaN |  NaN |       NaN
  Infinity |       NaN |                     NaN |  NaN |       NaN
 -Infinity |         1 |               -Infinity |  NaN | -Infinity
 -Infinity |        -1 |                Infinity |  NaN |  Infinity
 -Infinity |       4.2 |               -Infinity |  NaN | -Infinity
 -Infinity |  Infinity |                     NaN |  NaN |       NaN
 -Infinity | -Infinity |                     NaN |  NaN |       NaN
 -Infinity |       NaN |                     NaN |  NaN |       NaN
       NaN |         1 |                     NaN |  NaN |       NaN
       NaN |        -1 |                     NaN |  NaN |       NaN
       NaN |       4.2 |                     NaN |  NaN |       NaN
       NaN |  Infinity |                     NaN |  NaN |       NaN
       NaN | -Infinity |                     NaN |  NaN |       NaN
       NaN |       NaN |                     NaN |  NaN |       NaN
(42 rows)

ROLLBACK;
BEGIN;
--Testcase 505:
DELETE FROM v;
--Testcase 506:
INSERT INTO v(x) VALUES ('inf':: float8);
--Testcase 507:
SELECT x::numeric / '0' FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 508:
DELETE FROM v;
--Testcase 509:
INSERT INTO v(x) VALUES ('-inf':: float8);
--Testcase 510:
SELECT x::numeric / '0' FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 511:
DELETE FROM v;
--Testcase 512:
INSERT INTO v(x) VALUES ('nan':: float8);
--Testcase 513:
SELECT x::numeric / '0' FROM v;
 ?column? 
----------
      NaN
(1 row)

ROLLBACK;
BEGIN;
--Testcase 514:
DELETE FROM v;
--Testcase 515:
INSERT INTO v(x) VALUES ('0':: float8);
--Testcase 516:
SELECT x::numeric / '0' FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 517:
DELETE FROM v;
--Testcase 518:
INSERT INTO v(x) VALUES ('inf':: float8);
--Testcase 519:
SELECT x::numeric % '0' FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 520:
DELETE FROM v;
--Testcase 521:
INSERT INTO v(x) VALUES ('-inf':: float8);
--Testcase 522:
SELECT x::numeric % '0' FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 523:
DELETE FROM v;
--Testcase 524:
INSERT INTO v(x) VALUES ('nan':: float8);
--Testcase 525:
SELECT x::numeric % '0' FROM v;
 ?column? 
----------
      NaN
(1 row)

ROLLBACK;
BEGIN;
--Testcase 526:
DELETE FROM v;
--Testcase 527:
INSERT INTO v(x) VALUES ('0':: float8);
--Testcase 528:
SELECT x::numeric % '0' FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 529:
DELETE FROM v;
--Testcase 530:
INSERT INTO v(x) VALUES ('inf':: float8);
--Testcase 531:
SELECT div(x::numeric, '0') FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 532:
DELETE FROM v;
--Testcase 533:
INSERT INTO v(x) VALUES ('-inf':: float8);
--Testcase 534:
SELECT div(x::numeric, '0') FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 535:
DELETE FROM v;
--Testcase 536:
INSERT INTO v(x) VALUES ('nan':: float8);
--Testcase 537:
SELECT div(x::numeric, '0') FROM v;
 div 
-----
 NaN
(1 row)

ROLLBACK;
BEGIN;
--Testcase 538:
DELETE FROM v;
--Testcase 539:
INSERT INTO v(x) VALUES ('0':: float8);
--Testcase 540:
SELECT div(x::numeric, '0') FROM v;
ERROR:  division by zero
ROLLBACK;
BEGIN;
--Testcase 541:
DELETE FROM v;
--Testcase 542:
INSERT INTO v(x) VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('inf'),('-inf'),('nan');
--Testcase 543:
SELECT x, -x as minusx, abs(x::numeric), floor(x::numeric), ceil(x::numeric), sign(x::numeric), numeric_inc(x::numeric) as inc
FROM v;
     x     |  minusx   |   abs    |   floor   |   ceil    | sign |    inc    
-----------+-----------+----------+-----------+-----------+------+-----------
         0 |        -0 |        0 |         0 |         0 |    0 |         1
         1 |        -1 |        1 |         1 |         1 |    1 |         2
        -1 |         1 |        1 |        -1 |        -1 |   -1 |         0
       4.2 |      -4.2 |      4.2 |         4 |         5 |    1 |       5.2
    -7.777 |     7.777 |    7.777 |        -8 |        -7 |   -1 |    -6.777
  Infinity | -Infinity | Infinity |  Infinity |  Infinity |    1 |  Infinity
 -Infinity |  Infinity | Infinity | -Infinity | -Infinity |   -1 | -Infinity
       NaN |       NaN |      NaN |       NaN |       NaN |  NaN |       NaN
(8 rows)

ROLLBACK;
BEGIN;
--Testcase 544:
DELETE FROM v;
--Testcase 545:
INSERT INTO v(x) VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),('inf'),('-inf'),('nan');
--Testcase 546:
SELECT x, round(x::numeric), round(x::numeric,1) as round1, trunc(x::numeric), trunc(x::numeric,1) as trunc1
FROM v;
     x     |   round   |  round1   |   trunc   |  trunc1   
-----------+-----------+-----------+-----------+-----------
         0 |         0 |       0.0 |         0 |       0.0
         1 |         1 |       1.0 |         1 |       1.0
        -1 |        -1 |      -1.0 |        -1 |      -1.0
       4.2 |         4 |       4.2 |         4 |       4.2
    -7.777 |        -8 |      -7.8 |        -7 |      -7.7
  Infinity |  Infinity |  Infinity |  Infinity |  Infinity
 -Infinity | -Infinity | -Infinity | -Infinity | -Infinity
       NaN |       NaN |       NaN |       NaN |       NaN
(8 rows)

ROLLBACK;
-- the large values fall into the numeric abbreviation code's maximal classes
-- ('1e340'),('-1e340') is out of range double => can not insert
BEGIN;
--Testcase 547:
DELETE FROM v;
--Testcase 548:
INSERT INTO v(x) VALUES('0'::numeric),('1'),('-1'),('4.2'),('-7.777'),
         ('inf'),('-inf'),('nan'),
         ('inf'),('-inf'),('nan');
--Testcase 549:
SELECT substring(x::text, 1, 32)
FROM v ORDER BY x;
 substring 
-----------
 -Infinity
 -Infinity
 -7.777
 -1
 0
 1
 4.2
 Infinity
 Infinity
 NaN
 NaN
(11 rows)

ROLLBACK;
BEGIN;
--Testcase 550:
DELETE FROM v;
--Testcase 551:
INSERT INTO v(x) VALUES('0'::numeric),('1'),('4.2'),('inf'),('nan');
--Testcase 552:
SELECT x::numeric, sqrt(x::numeric)
FROM v;
    x     |       sqrt        
----------+-------------------
        0 | 0.000000000000000
        1 | 1.000000000000000
      4.2 | 2.049390153191920
 Infinity |          Infinity
      NaN |               NaN
(5 rows)

ROLLBACK;
BEGIN;
--Testcase 553:
DELETE FROM v;
--Testcase 554:
INSERT INTO v(x) VALUES ('-1'::float8);
--Testcase 555:
SELECT sqrt(x::numeric) FROM v;
ERROR:  cannot take square root of a negative number
ROLLBACK;
BEGIN;
--Testcase 556:
DELETE FROM v;
--Testcase 557:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 558:
SELECT sqrt(x::numeric) FROM v;
ERROR:  cannot take square root of a negative number
ROLLBACK;
BEGIN;
--Testcase 559:
DELETE FROM v;
--Testcase 560:
INSERT INTO v(x) VALUES ('1'::numeric),('4.2'),('inf'),('nan');
--Testcase 561:
SELECT x,
  log(x::numeric),
  log10(x::numeric),
  ln(x::numeric)
FROM v;
    x     |        log         |       log10        |         ln         
----------+--------------------+--------------------+--------------------
        1 | 0.0000000000000000 | 0.0000000000000000 | 0.0000000000000000
      4.2 | 0.6232492903979005 | 0.6232492903979005 | 1.4350845252893226
 Infinity |           Infinity |           Infinity |           Infinity
      NaN |                NaN |                NaN |                NaN
(4 rows)

ROLLBACK;
BEGIN;
--Testcase 562:
DELETE FROM v;
--Testcase 563:
INSERT INTO v(x) VALUES ('0'::float8);
--Testcase 564:
SELECT ln(x::numeric) FROM v;
ERROR:  cannot take logarithm of zero
ROLLBACK;
BEGIN;
--Testcase 565:
DELETE FROM v;
--Testcase 566:
INSERT INTO v(x) VALUES ('-1'::float8);
--Testcase 567:
SELECT ln(x::numeric) FROM v;
ERROR:  cannot take logarithm of a negative number
ROLLBACK;
BEGIN;
--Testcase 568:
DELETE FROM v;
--Testcase 569:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 570:
SELECT ln(x::numeric) FROM v;
ERROR:  cannot take logarithm of a negative number
ROLLBACK;
BEGIN;
--Testcase 571:
DELETE FROM v;
--Testcase 572:
INSERT INTO v(x) VALUES ('2'::numeric),('4.2'),('inf'),('nan');
--Testcase 573:
SELECT x1, x2,
  log(x1::numeric, x2::numeric)
FROM v AS v1(id, x1), v AS v2(id, x2);
    x1    |    x2    |        log         
----------+----------+--------------------
        2 |        2 | 1.0000000000000000
        2 |      4.2 | 2.0703893278913979
        2 | Infinity |           Infinity
        2 |      NaN |                NaN
      4.2 |        2 | 0.4830009440873890
      4.2 |      4.2 | 1.0000000000000000
      4.2 | Infinity |           Infinity
      4.2 |      NaN |                NaN
 Infinity |        2 |                  0
 Infinity |      4.2 |                  0
 Infinity | Infinity |                NaN
 Infinity |      NaN |                NaN
      NaN |        2 |                NaN
      NaN |      4.2 |                NaN
      NaN | Infinity |                NaN
      NaN |      NaN |                NaN
(16 rows)

ROLLBACK;
BEGIN;
--Testcase 574:
DELETE FROM v;
--Testcase 575:
INSERT INTO v(x) VALUES ('0'::float8);
--Testcase 576:
SELECT log(x::numeric, '10') FROM v;
ERROR:  cannot take logarithm of zero
ROLLBACK;
BEGIN;
--Testcase 577:
DELETE FROM v;
--Testcase 578:
INSERT INTO v(x) VALUES ('10'::float8);
--Testcase 579:
SELECT log(x::numeric, '0') FROM v;
ERROR:  cannot take logarithm of zero
ROLLBACK;
BEGIN;
--Testcase 580:
DELETE FROM v;
--Testcase 581:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 582:
SELECT log(x::numeric, '10') FROM v;
ERROR:  cannot take logarithm of a negative number
ROLLBACK;
BEGIN;
--Testcase 583:
DELETE FROM v;
--Testcase 584:
INSERT INTO v(x) VALUES ('10'::float8);
--Testcase 585:
SELECT log(x::numeric, '-inf') FROM v;
ERROR:  cannot take logarithm of a negative number
ROLLBACK;
BEGIN;
--Testcase 586:
DELETE FROM v;
--Testcase 587:
INSERT INTO v(x) VALUES ('inf'::float8);
--Testcase 588:
SELECT log(x::numeric, '0') FROM v;
ERROR:  cannot take logarithm of zero
ROLLBACK;
BEGIN;
--Testcase 589:
DELETE FROM v;
--Testcase 590:
INSERT INTO v(x) VALUES ('inf'::float8);
--Testcase 591:
SELECT log(x::numeric, '-inf') FROM v;
ERROR:  cannot take logarithm of a negative number
ROLLBACK;
BEGIN;
--Testcase 592:
DELETE FROM v;
--Testcase 593:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 594:
SELECT log(x::numeric, 'inf') FROM v;
ERROR:  cannot take logarithm of a negative number
ROLLBACK;
BEGIN;
--Testcase 595:
DELETE FROM v;
--Testcase 596:
INSERT INTO v(x) VALUES ('0'::numeric),('1'),('2'),('4.2'),('inf'),('nan');
--Testcase 597:
SELECT x1, x2,
  power(x1::numeric, x2::numeric)
FROM v AS v1(id, x1), v AS v2(id, x2) WHERE x1 != 0 OR x2 >= 0;
    x1    |    x2    |       power        
----------+----------+--------------------
        0 |        0 | 1.0000000000000000
        0 |        1 | 0.0000000000000000
        0 |        2 | 0.0000000000000000
        0 |      4.2 | 0.0000000000000000
        0 | Infinity |                  0
        0 |      NaN |                NaN
        1 |        0 | 1.0000000000000000
        1 |        1 | 1.0000000000000000
        1 |        2 | 1.0000000000000000
        1 |      4.2 | 1.0000000000000000
        1 | Infinity |                  1
        1 |      NaN |                  1
        2 |        0 | 1.0000000000000000
        2 |        1 | 2.0000000000000000
        2 |        2 | 4.0000000000000000
        2 |      4.2 | 18.379173679952560
        2 | Infinity |           Infinity
        2 |      NaN |                NaN
      4.2 |        0 | 1.0000000000000000
      4.2 |        1 | 4.2000000000000000
      4.2 |        2 | 17.640000000000000
      4.2 |      4.2 | 414.61691860129675
      4.2 | Infinity |           Infinity
      4.2 |      NaN |                NaN
 Infinity |        0 |                  1
 Infinity |        1 |           Infinity
 Infinity |        2 |           Infinity
 Infinity |      4.2 |           Infinity
 Infinity | Infinity |           Infinity
 Infinity |      NaN |                NaN
      NaN |        0 |                  1
      NaN |        1 |                NaN
      NaN |        2 |                NaN
      NaN |      4.2 |                NaN
      NaN | Infinity |                NaN
      NaN |      NaN |                NaN
(36 rows)

ROLLBACK;
BEGIN;
--Testcase 598:
DELETE FROM v;
--Testcase 599:
INSERT INTO v(x) VALUES ('0'::float8);
--Testcase 600:
SELECT power(x::numeric, '-1') FROM v;
ERROR:  zero raised to a negative power is undefined
ROLLBACK;
BEGIN;
--Testcase 601:
DELETE FROM v;
--Testcase 602:
INSERT INTO v(x) VALUES ('0'::float8);
--Testcase 603:
SELECT power(x::numeric, '-inf') FROM v;
ERROR:  zero raised to a negative power is undefined
ROLLBACK;
BEGIN;
--Testcase 604:
DELETE FROM v;
--Testcase 605:
INSERT INTO v(x) VALUES ('-1'::float8);
--Testcase 606:
SELECT power(x::numeric, 'inf') FROM v;
 power 
-------
     1
(1 row)

ROLLBACK;
BEGIN;
--Testcase 607:
DELETE FROM v;
--Testcase 608:
INSERT INTO v(x) VALUES ('-2'::float8);
--Testcase 609:
SELECT power(x::numeric, '3') FROM v;
        power        
---------------------
 -8.0000000000000000
(1 row)

ROLLBACK;
BEGIN;
--Testcase 610:
DELETE FROM v;
--Testcase 611:
INSERT INTO v(x) VALUES ('-2'::float8);
--Testcase 612:
SELECT power(x::numeric, '3.3') FROM v;
ERROR:  a negative number raised to a non-integer power yields a complex result
ROLLBACK;
BEGIN;
--Testcase 613:
DELETE FROM v;
--Testcase 614:
INSERT INTO v(x) VALUES ('-2'::float8);
--Testcase 615:
SELECT power(x::numeric, '-1') FROM v;
        power        
---------------------
 -0.5000000000000000
(1 row)

ROLLBACK;
BEGIN;
--Testcase 616:
DELETE FROM v;
--Testcase 617:
INSERT INTO v(x) VALUES ('-2'::float8);
--Testcase 618:
SELECT power(x::numeric, '-1.5') FROM v;
ERROR:  a negative number raised to a non-integer power yields a complex result
ROLLBACK;
BEGIN;
--Testcase 619:
DELETE FROM v;
--Testcase 620:
INSERT INTO v(x) VALUES ('-2'::float8);
--Testcase 621:
SELECT power(x::numeric, 'inf') FROM v;
  power   
----------
 Infinity
(1 row)

ROLLBACK;
BEGIN;
--Testcase 622:
DELETE FROM v;
--Testcase 623:
INSERT INTO v(x) VALUES ('-2'::float8);
--Testcase 624:
SELECT power(x::numeric, '-inf') FROM v;
 power 
-------
     0
(1 row)

ROLLBACK;
BEGIN;
--Testcase 625:
DELETE FROM v;
--Testcase 626:
INSERT INTO v(x) VALUES ('inf'::float8);
--Testcase 627:
SELECT power(x::numeric, '-2') FROM v;
 power 
-------
     0
(1 row)

ROLLBACK;
BEGIN;
--Testcase 628:
DELETE FROM v;
--Testcase 629:
INSERT INTO v(x) VALUES ('inf'::float8);
--Testcase 630:
SELECT power(x::numeric, '-inf') FROM v;
 power 
-------
     0
(1 row)

ROLLBACK;
BEGIN;
--Testcase 631:
DELETE FROM v;
--Testcase 632:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 633:
SELECT power(x::numeric, '2') FROM v;
  power   
----------
 Infinity
(1 row)

ROLLBACK;
BEGIN;
--Testcase 634:
DELETE FROM v;
--Testcase 635:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 636:
SELECT power(x::numeric, '3') FROM v;
   power   
-----------
 -Infinity
(1 row)

ROLLBACK;
BEGIN;
--Testcase 637:
DELETE FROM v;
--Testcase 638:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 639:
SELECT power(x::numeric, '4.5') FROM v;
ERROR:  a negative number raised to a non-integer power yields a complex result
ROLLBACK;
BEGIN;
--Testcase 640:
DELETE FROM v;
--Testcase 641:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 642:
SELECT power(x::numeric, '-2') FROM v;
 power 
-------
     0
(1 row)

ROLLBACK;
BEGIN;
--Testcase 643:
DELETE FROM v;
--Testcase 644:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 645:
SELECT power(x::numeric, '-3') FROM v;
 power 
-------
     0
(1 row)

ROLLBACK;
BEGIN;
--Testcase 646:
DELETE FROM v;
--Testcase 647:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 648:
SELECT power(x::numeric, '0') FROM v;
 power 
-------
     1
(1 row)

ROLLBACK;
BEGIN;
--Testcase 649:
DELETE FROM v;
--Testcase 650:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 651:
SELECT power(x::numeric, 'inf') FROM v;
  power   
----------
 Infinity
(1 row)

ROLLBACK;
BEGIN;
--Testcase 652:
DELETE FROM v;
--Testcase 653:
INSERT INTO v(x) VALUES ('-inf'::float8);
--Testcase 654:
SELECT power(x::numeric, '-inf') FROM v;
 power 
-------
     0
(1 row)

ROLLBACK;
-- ******************************
-- * miscellaneous checks for things that have been broken in the past...
-- ******************************
-- numeric AVG used to fail on some platforms
--Testcase 655:
SELECT AVG(val) FROM num_data;
         avg         
---------------------
 -13430913.592242321
(1 row)

--Testcase 656:
SELECT STDDEV(val) FROM num_data;
      stddev       
-------------------
 27791203.28758835
(1 row)

--Testcase 657:
SELECT MAX(val) FROM num_data;
     max      
--------------
 7799461.4119
(1 row)

--Testcase 658:
SELECT MIN(val) FROM num_data;
    min    
-----------
 -83028485
(1 row)

--Testcase 659:
SELECT VARIANCE(val) FROM num_data;
     variance      
-------------------
 772350980172061.6
(1 row)

-- Check for appropriate rounding and overflow
--Testcase 660:
CREATE FOREIGN TABLE fract_only (id serial OPTIONS (rowkey 'true'), val float8) server griddb_svr;
--Testcase 661:
INSERT INTO fract_only VALUES (1, '0.0'::numeric(4,4));
--Testcase 662:
INSERT INTO fract_only VALUES (2, '0.1'::numeric(4,4));
--Testcase 663:
INSERT INTO fract_only VALUES (3, '1.0'::numeric(4,4));	-- should fail
ERROR:  numeric field overflow
DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1.
--Testcase 664:
INSERT INTO fract_only VALUES (4, '-0.9999'::numeric(4,4));
--Testcase 665:
INSERT INTO fract_only VALUES (5, '0.99994'::numeric(4,4));
--Testcase 666:
INSERT INTO fract_only VALUES (6, '0.99995'::numeric(4,4));  -- should fail
ERROR:  numeric field overflow
DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1.
--Testcase 667:
INSERT INTO fract_only VALUES (7, '0.00001'::numeric(4,4));
--Testcase 668:
INSERT INTO fract_only VALUES (8, '0.00017'::numeric(4,4));
--Testcase 669:
INSERT INTO fract_only VALUES (9, 'NaN'::numeric(4,4));
--Testcase 670:
INSERT INTO fract_only VALUES (10, 'Inf'::numeric(4,4));	-- should fail
ERROR:  numeric field overflow
DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value.
--Testcase 671:
INSERT INTO fract_only VALUES (11, '-Inf'::numeric(4,4));	-- should fail
ERROR:  numeric field overflow
DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value.
--Testcase 672:
SELECT id, val::numeric(4,4) FROM fract_only;
 id |   val   
----+---------
  1 |  0.0000
  2 |  0.1000
  4 | -0.9999
  5 |  0.9999
  7 |  0.0000
  8 |  0.0002
  9 |     NaN
(7 rows)

-- Check conversion to integers
--Testcase 1309:
CREATE FOREIGN TABLE INT8_TMP(id serial OPTIONS (rowkey 'true'), q1 int8, q2 int8) SERVER griddb_svr;
--Testcase 1310:
CREATE FOREIGN TABLE INT4_TMP(id serial OPTIONS (rowkey 'true'), a int4, b int4) SERVER griddb_svr;
--Testcase 1311:
CREATE FOREIGN TABLE INT2_TMP(id serial OPTIONS (rowkey 'true'), f1 int2) SERVER griddb_svr;
--Testcase 1312:
DELETE FROM INT8_TMP;
--Testcase 1271:
INSERT INTO INT8_TMP(q1) VALUES (-9223372036854775808.5); -- should fail
ERROR:  bigint out of range
--Testcase 1313:
INSERT INTO INT8_TMP(q1) VALUES (-9223372036854775808.4);
--Testcase 1272:
SELECT q1 FROM INT8_TMP; -- ok
          q1          
----------------------
 -9223372036854775808
(1 row)

--Testcase 1314:
DELETE FROM INT8_TMP;
--Testcase 1315:
INSERT INTO INT8_TMP(q1) VALUES (9223372036854775807.4);
--Testcase 1273:
SELECT q1 FROM INT8_TMP; -- ok
         q1          
---------------------
 9223372036854775807
(1 row)

--Testcase 1316:
DELETE FROM INT8_TMP;
--Testcase 1274:
INSERT INTO INT8_TMP(q1) VALUES (9223372036854775807.5); -- should fail
ERROR:  bigint out of range
--Testcase 1275:
INSERT INTO INT4_TMP(a) VALUES (-2147483648.5); -- should fail
ERROR:  integer out of range
--Testcase 1317:
INSERT INTO INT4_TMP(a) VALUES (-2147483648.4);
--Testcase 1276:
SELECT a FROM INT4_TMP; -- ok
      a      
-------------
 -2147483648
(1 row)

--Testcase 1318:
DELETE FROM INT4_TMP;
--Testcase 1319:
INSERT INTO INT4_TMP(a) VALUES (2147483647.4);
--Testcase 1277:
SELECT a FROM INT4_TMP; -- ok
     a      
------------
 2147483647
(1 row)

--Testcase 1278:
INSERT INTO INT4_TMP(a) VALUES (2147483647.5); -- should fail
ERROR:  integer out of range
--Testcase 1279:
INSERT INTO INT2_TMP(f1) VALUES (-32768.5); -- should fail
ERROR:  smallint out of range
--Testcase 1320:
DELETE FROM INT2_TMP;
--Testcase 1321:
INSERT INTO INT2_TMP(f1) VALUES (-32768.4);
--Testcase 1280:
SELECT f1 FROM INT2_TMP; -- ok
   f1   
--------
 -32768
(1 row)

--Testcase 1322:
DELETE FROM INT2_TMP;
--Testcase 1322:
INSERT INTO INT2_TMP(f1) VALUES (32767.4);
--Testcase 1281:
SELECT f1 FROM INT2_TMP; -- ok
  f1   
-------
 32767
(1 row)

--Testcase 1282:
INSERT INTO INT2_TMP(f1) VALUES (32767.5); -- should fail
ERROR:  smallint out of range
-- Check inf/nan conversion behavior
--Testcase 673:
DELETE FROM fract_only;
--Testcase 674:
INSERT INTO fract_only(val) VALUES ('NaN'::float8);
--Testcase 675:
SELECT val::numeric AS numeric FROM fract_only;
 numeric 
---------
     NaN
(1 row)

--Testcase 676:
DELETE FROM fract_only;
--Testcase 677:
INSERT INTO fract_only(val) VALUES ('Infinity'::float8);
--Testcase 678:
SELECT val::numeric FROM fract_only;
   val    
----------
 Infinity
(1 row)

--Testcase 679:
DELETE FROM fract_only;
--Testcase 680:
INSERT INTO fract_only(val) VALUES ('-Infinity'::float8);
--Testcase 681:
SELECT val::numeric FROM fract_only;
    val    
-----------
 -Infinity
(1 row)

--Testcase 682:
DELETE FROM fract_only;
-- not work
-- griddb not support numeric type, if we user float8 in stead of numeric,
-- these case is redundant
-- DELETE FROM fract_only;
-- INSERT INTO fract_only(val) VALUES ('NaN'::numeric);
-- SELECT val::float8 AS numeric FROM fract_only;
-- DELETE FROM fract_only;
-- INSERT INTO fract_only(val) VALUES ('Infinity'::numeric);
-- SELECT val::float8 FROM fract_only;
-- DELETE FROM fract_only;
-- INSERT INTO fract_only(val) VALUES ('-Infinity'::numeric);
-- SELECT val::float8 FROM fract_only;
-- DELETE FROM fract_only;
--Testcase 683:
INSERT INTO fract_only(val) VALUES ('NaN'::float8);
--Testcase 684:
SELECT val::numeric AS numeric FROM fract_only;
 numeric 
---------
     NaN
(1 row)

--Testcase 685:
DELETE FROM fract_only;
--Testcase 686:
INSERT INTO fract_only(val) VALUES ('Infinity'::float4);
--Testcase 687:
SELECT val::numeric FROM fract_only;
   val    
----------
 Infinity
(1 row)

--Testcase 688:
DELETE FROM fract_only;
--Testcase 689:
INSERT INTO fract_only(val) VALUES ('-Infinity'::float4);
--Testcase 690:
SELECT val::numeric FROM fract_only;
    val    
-----------
 -Infinity
(1 row)

-- griddb not support numeric type
-- SELECT 'NaN'::numeric::float4;
-- SELECT 'Infinity'::numeric::float4;
-- SELECT '-Infinity'::numeric::float4;
-- SELECT '42'::int2::numeric;
-- SELECT 'NaN'::numeric::int2;
-- SELECT 'Infinity'::numeric::int2;
-- SELECT '-Infinity'::numeric::int2;
-- SELECT 'NaN'::numeric::int4;
-- SELECT 'Infinity'::numeric::int4;
-- SELECT '-Infinity'::numeric::int4;
-- SELECT 'NaN'::numeric::int8;
-- SELECT 'Infinity'::numeric::int8;
-- SELECT '-Infinity'::numeric::int8;
--Testcase 691:
DELETE FROM fract_only;
--Testcase 692:
DROP FOREIGN TABLE fract_only;
-- Simple check that ceil(), floor(), and round() work correctly
--Testcase 693:
CREATE FOREIGN TABLE ceil_floor_round (id serial options (rowkey 'true'), a float8) SERVER griddb_svr;
--Testcase 694:
INSERT INTO ceil_floor_round(a) VALUES ('-5.5');
--Testcase 695:
INSERT INTO ceil_floor_round(a) VALUES ('-5.499999');
--Testcase 696:
INSERT INTO ceil_floor_round(a) VALUES ('9.5');
--Testcase 697:
INSERT INTO ceil_floor_round(a) VALUES ('9.4999999');
--Testcase 698:
INSERT INTO ceil_floor_round(a) VALUES ('0.0');
--Testcase 699:
INSERT INTO ceil_floor_round(a) VALUES ('0.0000001');
--Testcase 700:
INSERT INTO ceil_floor_round(a) VALUES ('-0.000001');
--Testcase 701:
SELECT a::numeric, ceil(a::numeric), ceiling(a::numeric), floor(a::numeric), round(a::numeric) FROM ceil_floor_round;
     a     | ceil | ceiling | floor | round 
-----------+------+---------+-------+-------
      -5.5 |   -5 |      -5 |    -6 |    -6
 -5.499999 |   -5 |      -5 |    -6 |    -5
       9.5 |   10 |      10 |     9 |    10
 9.4999999 |   10 |      10 |     9 |     9
         0 |    0 |       0 |     0 |     0
 0.0000001 |    1 |       1 |     0 |     0
 -0.000001 |    0 |       0 |    -1 |     0
(7 rows)

-- Check rounding, it should round ties away from zero.
--Testcase 702:
DELETE FROM ceil_floor_round;
--Testcase 703:
INSERT INTO ceil_floor_round(a) SELECT * FROM generate_series(-5,5);
--Testcase 704:
SELECT a as pow,
	round((-2.5 * 10 ^ a)::numeric, -a::int),
	round((-1.5 * 10 ^ a)::numeric, -a::int),
	round((-0.5 * 10 ^ a)::numeric, -a::int),
	round((0.5 * 10 ^ a)::numeric, -a::int),
	round((1.5 * 10 ^ a)::numeric, -a::int),
	round((2.5 * 10 ^ a)::numeric, -a::int)
FROM ceil_floor_round;
 pow |  round   |  round   |  round   |  round  |  round  |  round  
-----+----------+----------+----------+---------+---------+---------
  -5 | -0.00003 | -0.00002 | -0.00001 | 0.00001 | 0.00002 | 0.00003
  -4 |  -0.0003 |  -0.0002 |  -0.0001 |  0.0001 |  0.0002 |  0.0003
  -3 |   -0.003 |   -0.002 |   -0.001 |   0.001 |   0.002 |   0.003
  -2 |    -0.03 |    -0.02 |    -0.01 |    0.01 |    0.02 |    0.03
  -1 |     -0.3 |     -0.2 |     -0.1 |     0.1 |     0.2 |     0.3
   0 |       -3 |       -2 |       -1 |       1 |       2 |       3
   1 |      -30 |      -20 |      -10 |      10 |      20 |      30
   2 |     -300 |     -200 |     -100 |     100 |     200 |     300
   3 |    -3000 |    -2000 |    -1000 |    1000 |    2000 |    3000
   4 |   -30000 |   -20000 |   -10000 |   10000 |   20000 |   30000
   5 |  -300000 |  -200000 |  -100000 |  100000 |  200000 |  300000
(11 rows)

-- Testing for width_bucket(). For convenience, we test both the
-- numeric and float8 versions of the function in this file.
-- errors
--Testcase 705:
CREATE FOREIGN TABLE width_bucket_tbl (
	id serial OPTIONS (rowkey 'true'),
	id1 float8,
	id2 float8,
	id3 float8,
	id4 int
) SERVER griddb_svr;
--Testcase 706:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (5.0, 3.0, 4.0, 0);
--Testcase 707:
SELECT width_bucket(id1, id2, id3, id4) FROM width_bucket_tbl;
ERROR:  count must be greater than zero
--Testcase 708:
DELETE FROM width_bucket_tbl;
--Testcase 709:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (5.0, 3.0, 4.0, -5);
--Testcase 710:
SELECT width_bucket(id1, id2, id3, id4) FROM width_bucket_tbl;
ERROR:  count must be greater than zero
--Testcase 711:
DELETE FROM width_bucket_tbl;
--Testcase 712:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (3.5, 3.0, 3.0, 888);
--Testcase 713:
SELECT width_bucket(id1, id2, id3, id4) FROM width_bucket_tbl;
ERROR:  lower bound cannot equal upper bound
--Testcase 714:
DELETE FROM width_bucket_tbl;
--Testcase 715:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (5.0, 3.0, 4.0, 0);
--Testcase 716:
SELECT width_bucket(id1::float8, id2::float8, id3::float8, id4) FROM width_bucket_tbl;
ERROR:  count must be greater than zero
--Testcase 717:
DELETE FROM width_bucket_tbl;
--Testcase 718:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (5.0, 3.0, 4.0, -5);
--Testcase 719:
SELECT width_bucket(id1::float8, id2::float8, id3::float8, id4) FROM width_bucket_tbl;
ERROR:  count must be greater than zero
--Testcase 720:
DELETE FROM width_bucket_tbl;
--Testcase 721:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (3.5, 3.0, 3.0, 888);
--Testcase 722:
SELECT width_bucket(id1::float8, id2::float8, id3::float8, id4) FROM width_bucket_tbl;
ERROR:  lower bound cannot equal upper bound
--Testcase 723:
DELETE FROM width_bucket_tbl;
--Testcase 724:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES ('NaN'::numeric, 3.0, 4.0, 888);
--Testcase 725:
SELECT width_bucket(id1, id2, id3, id4) FROM width_bucket_tbl;
ERROR:  operand, lower bound, and upper bound cannot be NaN
--Testcase 726:
DELETE FROM width_bucket_tbl;
--Testcase 727:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0, 'NaN'::numeric, 4.0, 888);
--Testcase 728:
SELECT width_bucket(id1::float8, id2, id3::float8, id4) FROM width_bucket_tbl;
ERROR:  operand, lower bound, and upper bound cannot be NaN
--Testcase 729:
DELETE FROM width_bucket_tbl;
--Testcase 730:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (2.0, 3.0, '-inf'::float8, 888);
--Testcase 731:
SELECT width_bucket(id1::float8, id2, id3::float8, id4) FROM width_bucket_tbl;
ERROR:  lower and upper bounds must be finite
--Testcase 732:
DELETE FROM width_bucket_tbl;
--Testcase 733:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0, '-inf'::float8, 4.0, 888);
--Testcase 734:
SELECT width_bucket(id1::float8, id2, id3::float8, id4) FROM width_bucket_tbl;
ERROR:  lower and upper bounds must be finite
-- normal operation
--Testcase 735:
CREATE FOREIGN TABLE width_bucket_test (
	id serial OPTIONS (rowkey 'true'),
	operand_num float8,
	operand_f8 float8
) SERVER griddb_svr;
COPY width_bucket_test (operand_num) FROM stdin;
--Testcase 736:
UPDATE width_bucket_test SET operand_f8 = operand_num::float8;
--Testcase 737:
SELECT
    operand_num::numeric,
    width_bucket(operand_num, 0, 10, 5) AS wb_1,
    width_bucket(operand_f8, 0, 10, 5) AS wb_1f,
    width_bucket(operand_num, 10, 0, 5) AS wb_2,
    width_bucket(operand_f8, 10, 0, 5) AS wb_2f,
    width_bucket(operand_num, 2, 8, 4) AS wb_3,
    width_bucket(operand_f8, 2, 8, 4) AS wb_3f,
    width_bucket(operand_num, 5.0, 5.5, 20) AS wb_4,
    width_bucket(operand_f8, 5.0, 5.5, 20) AS wb_4f,
    width_bucket(operand_num, -25, 25, 10) AS wb_5,
    width_bucket(operand_f8, -25, 25, 10) AS wb_5f
    FROM width_bucket_test;
   operand_num    | wb_1 | wb_1f | wb_2 | wb_2f | wb_3 | wb_3f | wb_4 | wb_4f | wb_5 | wb_5f 
------------------+------+-------+------+-------+------+-------+------+-------+------+-------
             -5.2 |    0 |     0 |    6 |     6 |    0 |     0 |    0 |     0 |    4 |     4
    -0.0000000001 |    0 |     0 |    6 |     6 |    0 |     0 |    0 |     0 |    5 |     5
   0.000000000001 |    1 |     1 |    5 |     5 |    0 |     0 |    0 |     0 |    6 |     6
                1 |    1 |     1 |    5 |     5 |    0 |     0 |    0 |     0 |    6 |     6
 1.99999999999999 |    1 |     1 |    5 |     5 |    0 |     0 |    0 |     0 |    6 |     6
                2 |    2 |     2 |    5 |     5 |    1 |     1 |    0 |     0 |    6 |     6
 2.00000000000001 |    2 |     2 |    4 |     4 |    1 |     1 |    0 |     0 |    6 |     6
                3 |    2 |     2 |    4 |     4 |    1 |     1 |    0 |     0 |    6 |     6
                4 |    3 |     3 |    4 |     4 |    2 |     2 |    0 |     0 |    6 |     6
              4.5 |    3 |     3 |    3 |     3 |    2 |     2 |    0 |     0 |    6 |     6
                5 |    3 |     3 |    3 |     3 |    3 |     3 |    1 |     1 |    7 |     7
              5.5 |    3 |     3 |    3 |     3 |    3 |     3 |   21 |    21 |    7 |     7
                6 |    4 |     4 |    3 |     3 |    3 |     3 |   21 |    21 |    7 |     7
                7 |    4 |     4 |    2 |     2 |    4 |     4 |   21 |    21 |    7 |     7
                8 |    5 |     5 |    2 |     2 |    5 |     5 |   21 |    21 |    7 |     7
                9 |    5 |     5 |    1 |     1 |    5 |     5 |   21 |    21 |    7 |     7
 9.99999999999999 |    5 |     5 |    1 |     1 |    5 |     5 |   21 |    21 |    7 |     7
               10 |    6 |     6 |    1 |     1 |    5 |     5 |   21 |    21 |    8 |     8
 10.0000000000001 |    6 |     6 |    0 |     0 |    5 |     5 |   21 |    21 |    8 |     8
(19 rows)

-- Check positive and negative infinity: we require
-- finite bucket bounds, but allow an infinite operand
--Testcase 738:
DELETE FROM width_bucket_tbl;
--Testcase 739:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0.0, 'Infinity', 5, 10);
--Testcase 740:
SELECT width_bucket(id1::numeric, id2::numeric, id3, id4) FROM width_bucket_tbl;  -- error
ERROR:  lower and upper bounds must be finite
--Testcase 741:
DELETE FROM width_bucket_tbl;
--Testcase 742:
DELETE FROM width_bucket_tbl;
--Testcase 743:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0.0, 5, 'Infinity', 10);
--Testcase 744:
SELECT width_bucket(id1::numeric, id2::numeric, id3, id4) FROM width_bucket_tbl;  -- error
ERROR:  lower and upper bounds must be finite
--Testcase 745:
DELETE FROM width_bucket_tbl;
--Testcase 746:
DELETE FROM width_bucket_tbl;
--Testcase 747:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES ('Infinity', 1, 10, 10);
--Testcase 748:
SELECT width_bucket(id1::numeric, id2::numeric, id3, id4) FROM width_bucket_tbl;
 width_bucket 
--------------
           11
(1 row)

--Testcase 749:
DELETE FROM width_bucket_tbl;
--Testcase 750:
DELETE FROM width_bucket_tbl;
--Testcase 751:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES ('-Infinity', 1, 10, 10);
--Testcase 752:
SELECT width_bucket(id1::numeric, id2::numeric, id3, id4) FROM width_bucket_tbl;
 width_bucket 
--------------
            0
(1 row)

--Testcase 753:
DELETE FROM width_bucket_tbl;
--Testcase 754:
DELETE FROM width_bucket_tbl;
--Testcase 755:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0.0, 'Infinity', 5, 10);
--Testcase 756:
SELECT width_bucket(id1::float8, id2::float8, id3, id4) FROM width_bucket_tbl;  -- error
ERROR:  lower and upper bounds must be finite
--Testcase 757:
DELETE FROM width_bucket_tbl;
--Testcase 758:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0.0, 5, '-Infinity', 20);
--Testcase 759:
SELECT width_bucket(id1::float8, id2, id3::float8, id4) FROM width_bucket_tbl; -- error
ERROR:  lower and upper bounds must be finite
--Testcase 760:
DELETE FROM width_bucket_tbl;
--Testcase 761:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES ('Infinity', 1, 10, 10);
--Testcase 762:
SELECT width_bucket(id1::float8, id2, id3, id4) FROM width_bucket_tbl;
 width_bucket 
--------------
           11
(1 row)

--Testcase 763:
DELETE FROM width_bucket_tbl;
--Testcase 764:
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES ('-Infinity', 1, 10, 10);
--Testcase 765:
SELECT width_bucket(id1::float8, id2, id3, id4) FROM width_bucket_tbl;
 width_bucket 
--------------
            0
(1 row)

--Testcase 766:
DROP FOREIGN TABLE width_bucket_test;
-- Simple test for roundoff error when results should be exact
--Testcase 767:
CREATE FOREIGN TABLE width_bucket_roundoff_tbl (id serial options (rowkey 'true'), x int) SERVER griddb_svr;
--Testcase 768:
INSERT INTO width_bucket_roundoff_tbl(x) SELECT * FROM generate_series(0, 110, 10) x;
--Testcase 769:
SELECT x, width_bucket(x::float8, 10, 100, 9) as flt,
       width_bucket(x::numeric, 10, 100, 9) as num
FROM width_bucket_roundoff_tbl;
  x  | flt | num 
-----+-----+-----
   0 |   0 |   0
  10 |   1 |   1
  20 |   2 |   2
  30 |   3 |   3
  40 |   4 |   4
  50 |   5 |   5
  60 |   6 |   6
  70 |   7 |   7
  80 |   8 |   8
  90 |   9 |   9
 100 |  10 |  10
 110 |  10 |  10
(12 rows)

--Testcase 770:
SELECT x, width_bucket(x::float8, 100, 10, 9) as flt,
       width_bucket(x::numeric, 100, 10, 9) as num
FROM width_bucket_roundoff_tbl;
  x  | flt | num 
-----+-----+-----
   0 |  10 |  10
  10 |  10 |  10
  20 |   9 |   9
  30 |   8 |   8
  40 |   7 |   7
  50 |   6 |   6
  60 |   5 |   5
  70 |   4 |   4
  80 |   3 |   3
  90 |   2 |   2
 100 |   1 |   1
 110 |   0 |   0
(12 rows)

--Testcase 771:
DROP FOREIGN TABLE width_bucket_roundoff_tbl;
DELETE FROM width_bucket_tbl;
-- Another roundoff-error hazard
INSERT INTO width_bucket_tbl(id1,id2,id3,id4) VALUES (0, -1e100::numeric, 1, 10), (0, -1e100::float8, 1, 10), (1, 1e100::numeric, 0, 10), (1, 1e100::float8, 0, 10);
SELECT width_bucket(id1, id2, id3, id4) FROM width_bucket_tbl;
 width_bucket 
--------------
           10
           10
           10
           10
(4 rows)

-- Check cases that could trigger overflow or underflow within the calculation
DELETE FROM width_bucket_tbl;
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (10.5::float8, -1.797e+308::float8, 1.797e+308::float8, 1),
                                    (10.5::float8, -1.797e+308::float8, 1.797e+308::float8, 2),
                                    (10.5::float8, -1.797e+308::float8, 1.797e+308::float8, 3),
                                    (1.797e+308::float8 / 4, -1.797e+308::float8 / 2, 1.797e+308::float8 / 2, 10),
                                    (10.5::float8, 1.797e+308::float8, -1.797e+308::float8, 1),
                                    (10.5::float8, 1.797e+308::float8, -1.797e+308::float8, 2),
                                    (10.5::float8, 1.797e+308::float8, -1.797e+308::float8, 3),
                                    (1.797e+308::float8 / 4, 1.797e+308::float8 / 2, -1.797e+308::float8 / 2, 10),
                                    (0, 0, 5e-324::float8, 4),
                                    (5e-324::float8, 0, 5e-324::float8, 4),
                                    (0, 0, 1, 2147483647),
                                    (1, 1, 0, 2147483647);
SELECT oper, low, high, cnt, width_bucket(oper, low, high, cnt)
FROM
  (SELECT 1.797e+308::float8 AS big, 5e-324::float8 AS tiny) as v,
  LATERAL (SELECT id1, id2, id3, id4 FROM width_bucket_tbl) as sample(oper, low, high, cnt);
    oper     |     low     |    high     |    cnt     | width_bucket 
-------------+-------------+-------------+------------+--------------
        10.5 | -1.797e+308 |  1.797e+308 |          1 |            1
        10.5 | -1.797e+308 |  1.797e+308 |          2 |            2
        10.5 | -1.797e+308 |  1.797e+308 |          3 |            2
 4.4925e+307 | -8.985e+307 |  8.985e+307 |         10 |            8
        10.5 |  1.797e+308 | -1.797e+308 |          1 |            1
        10.5 |  1.797e+308 | -1.797e+308 |          2 |            2
        10.5 |  1.797e+308 | -1.797e+308 |          3 |            2
 4.4925e+307 |  8.985e+307 | -8.985e+307 |         10 |            3
           0 |           0 |      5e-324 |          4 |            1
      5e-324 |           0 |      5e-324 |          4 |            5
           0 |           0 |           1 | 2147483647 |            1
           1 |           1 |           0 | 2147483647 |            1
(12 rows)

-- These fail because the result would be out of int32 range:
DELETE FROM width_bucket_tbl;
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (1::float8, 0, 1, 2147483647);
SELECT width_bucket(id1, id2, id3, id4+1) FROM width_bucket_tbl;
ERROR:  integer out of range
DELETE FROM width_bucket_tbl;
INSERT INTO width_bucket_tbl(id1, id2, id3, id4) VALUES (0::float8, 1, 0, 2147483647);
SELECT width_bucket(id1, id2, id3, id4) FROM width_bucket_tbl;
ERROR:  integer out of range
DELETE FROM width_bucket_tbl;
-- TO_CHAR()
--
--Testcase 772:
SELECT to_char(val::numeric(210,10), '9G999G999G999G999G999')
	FROM num_data;
        to_char         
------------------------
                      0
                      0
            -34,338,492
                      4
              7,799,461
                 16,397
                 93,902
            -83,028,485
                 74,881
            -24,926,804
(10 rows)

--Testcase 773:
SELECT to_char(val::numeric(210,10), '9G999G999G999G999G999D999G999G999G999G999')
	FROM num_data;
                  to_char                   
--------------------------------------------
                       .000,000,000,000,000
                       .000,000,000,000,000
            -34,338,492.215,397,000,000,000
                      4.310,000,000,000,000
              7,799,461.411,900,000,000,000
                 16,397.038,491,000,000,000
                 93,901.577,630,260,000,000
            -83,028,485.000,000,000,000,000
                 74,881.000,000,000,000,000
            -24,926,804.045,047,400,000,000
(10 rows)

--Testcase 774:
SELECT to_char(val::numeric(210,10), '9999999999999999.999999999999999PR')
	FROM num_data;
              to_char               
------------------------------------
                  .000000000000000 
                  .000000000000000 
         <34338492.215397000000000>
                 4.310000000000000 
           7799461.411900000000000 
             16397.038491000000000 
             93901.577630260000000 
         <83028485.000000000000000>
             74881.000000000000000 
         <24926804.045047400000000>
(10 rows)

--Testcase 775:
SELECT to_char(val::numeric(210,10), '9999999999999999.999999999999999S')
	FROM num_data;
              to_char              
-----------------------------------
                 .000000000000000+
                 .000000000000000+
         34338492.215397000000000-
                4.310000000000000+
          7799461.411900000000000+
            16397.038491000000000+
            93901.577630260000000+
         83028485.000000000000000-
            74881.000000000000000+
         24926804.045047400000000-
(10 rows)

--Testcase 776:
SELECT to_char(val::numeric(210,10), 'MI9999999999999999.999999999999999')     FROM num_data;
              to_char              
-----------------------------------
                  .000000000000000
                  .000000000000000
 -        34338492.215397000000000
                 4.310000000000000
           7799461.411900000000000
             16397.038491000000000
             93901.577630260000000
 -        83028485.000000000000000
             74881.000000000000000
 -        24926804.045047400000000
(10 rows)

--Testcase 777:
SELECT  to_char(val::numeric(210,10), 'FMS9999999999999999.999999999999999')    FROM num_data;
      to_char      
-------------------
 +0.
 +0.
 -34338492.215397
 +4.31
 +7799461.4119
 +16397.038491
 +93901.57763026
 -83028485.
 +74881.
 -24926804.0450474
(10 rows)

--Testcase 778:
SELECT to_char(val::numeric(210,10), 'FM9999999999999999.999999999999999THPR') FROM num_data;
      to_char       
--------------------
 0.
 0.
 <34338492.215397>
 4.31
 7799461.4119
 16397.038491
 93901.57763026
 <83028485.>
 74881.
 <24926804.0450474>
(10 rows)

--Testcase 779:
SELECT to_char(val::numeric(210,10), 'SG9999999999999999.999999999999999th')   FROM num_data;
              to_char              
-----------------------------------
 +                .000000000000000
 +                .000000000000000
 -        34338492.215397000000000
 +               4.310000000000000
 +         7799461.411900000000000
 +           16397.038491000000000
 +           93901.577630260000000
 -        83028485.000000000000000
 +           74881.000000000000000
 -        24926804.045047400000000
(10 rows)

--Testcase 780:
SELECT to_char(val::numeric(210,10), '0999999999999999.999999999999999')       FROM num_data;
              to_char              
-----------------------------------
  0000000000000000.000000000000000
  0000000000000000.000000000000000
 -0000000034338492.215397000000000
  0000000000000004.310000000000000
  0000000007799461.411900000000000
  0000000000016397.038491000000000
  0000000000093901.577630260000000
 -0000000083028485.000000000000000
  0000000000074881.000000000000000
 -0000000024926804.045047400000000
(10 rows)

--Testcase 781:
SELECT to_char(val::numeric(210,10), 'S0999999999999999.999999999999999')      FROM num_data;
              to_char              
-----------------------------------
 +0000000000000000.000000000000000
 +0000000000000000.000000000000000
 -0000000034338492.215397000000000
 +0000000000000004.310000000000000
 +0000000007799461.411900000000000
 +0000000000016397.038491000000000
 +0000000000093901.577630260000000
 -0000000083028485.000000000000000
 +0000000000074881.000000000000000
 -0000000024926804.045047400000000
(10 rows)

--Testcase 782:
SELECT to_char(val::numeric(210,10), 'FM0999999999999999.999999999999999')     FROM num_data;
          to_char          
---------------------------
 0000000000000000.
 0000000000000000.
 -0000000034338492.215397
 0000000000000004.31
 0000000007799461.4119
 0000000000016397.038491
 0000000000093901.57763026
 -0000000083028485.
 0000000000074881.
 -0000000024926804.0450474
(10 rows)

--Testcase 783:
SELECT to_char(val::numeric(210,10), 'FM9999999999999999.099999999999999') 	FROM num_data;
      to_char      
-------------------
 .0
 .0
 -34338492.215397
 4.31
 7799461.4119
 16397.038491
 93901.57763026
 -83028485.0
 74881.0
 -24926804.0450474
(10 rows)

--Testcase 784:
SELECT to_char(val::numeric(210,10), 'FM9999999999990999.990999999999999') 	FROM num_data;
      to_char      
-------------------
 0000.000
 0000.000
 -34338492.215397
 0004.310
 7799461.4119
 16397.038491
 93901.57763026
 -83028485.000
 74881.000
 -24926804.0450474
(10 rows)

--Testcase 785:
SELECT to_char(val::numeric(210,10), 'FM0999999999999999.999909999999999') 	FROM num_data;
          to_char          
---------------------------
 0000000000000000.00000
 0000000000000000.00000
 -0000000034338492.215397
 0000000000000004.31000
 0000000007799461.41190
 0000000000016397.038491
 0000000000093901.57763026
 -0000000083028485.00000
 0000000000074881.00000
 -0000000024926804.0450474
(10 rows)

--Testcase 786:
SELECT to_char(val::numeric(210,10), 'FM9999999990999999.099999999999999') 	FROM num_data;
      to_char      
-------------------
 0000000.0
 0000000.0
 -34338492.215397
 0000004.31
 7799461.4119
 0016397.038491
 0093901.57763026
 -83028485.0
 0074881.0
 -24926804.0450474
(10 rows)

--Testcase 787:
SELECT to_char(val::numeric(210,10), 'L9999999999999999.099999999999999')	FROM num_data;
              to_char               
------------------------------------
                   .000000000000000
                   .000000000000000
          -34338492.215397000000000
                  4.310000000000000
            7799461.411900000000000
              16397.038491000000000
              93901.577630260000000
          -83028485.000000000000000
              74881.000000000000000
          -24926804.045047400000000
(10 rows)

--Testcase 788:
SELECT to_char(val::numeric(210,10), 'FM9999999999999999.99999999999999')	FROM num_data;
      to_char      
-------------------
 0.
 0.
 -34338492.215397
 4.31
 7799461.4119
 16397.038491
 93901.57763026
 -83028485.
 74881.
 -24926804.0450474
(10 rows)

--Testcase 789:
SELECT to_char(val::numeric(210,10), 'S 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 . 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') FROM num_data;
                                to_char                                
-----------------------------------------------------------------------
                                  +. 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                                  +. 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                  -3 4 3 3 8 4 9 2 . 2 1 5 3 9 7 0 0 0 0 0 0 0 0 0 0 0
                                +4 . 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                    +7 7 9 9 4 6 1 . 4 1 1 9 0 0 0 0 0 0 0 0 0 0 0 0 0
                        +1 6 3 9 7 . 0 3 8 4 9 1 0 0 0 0 0 0 0 0 0 0 0
                        +9 3 9 0 1 . 5 7 7 6 3 0 2 6 0 0 0 0 0 0 0 0 0
                  -8 3 0 2 8 4 8 5 . 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                        +7 4 8 8 1 . 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                  -2 4 9 2 6 8 0 4 . 0 4 5 0 4 7 4 0 0 0 0 0 0 0 0 0 0
(10 rows)

--Testcase 790:
SELECT to_char(val::numeric(210,10), 'FMS 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 . 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9') FROM num_data;
                       to_char                       
-----------------------------------------------------
                 +0 .                 
                 +0 .                 
          -3 4 3 3 8 4 9 2 . 2 1 5 3 9 7           
                 +4 . 3 1               
           +7 7 9 9 4 6 1 . 4 1 1 9             
             +1 6 3 9 7 . 0 3 8 4 9 1           
             +9 3 9 0 1 . 5 7 7 6 3 0 2 6         
          -8 3 0 2 8 4 8 5 .                 
             +7 4 8 8 1 .                 
          -2 4 9 2 6 8 0 4 . 0 4 5 0 4 7 4          
(10 rows)

--Testcase 791:
SELECT to_char(val::numeric(210,10), E'99999 "text" 9999 "9999" 999 "\\"text between quote marks\\"" 9999') FROM num_data;
                          to_char                          
-----------------------------------------------------------
       text      9999     "text between quote marks"     0
       text      9999     "text between quote marks"     0
       text    -3 9999 433 "text between quote marks" 8492
       text      9999     "text between quote marks"     4
       text      9999  779 "text between quote marks" 9461
       text      9999    1 "text between quote marks" 6397
       text      9999    9 "text between quote marks" 3902
       text    -8 9999 302 "text between quote marks" 8485
       text      9999    7 "text between quote marks" 4881
       text    -2 9999 492 "text between quote marks" 6804
(10 rows)

--Testcase 792:
SELECT to_char(val::numeric(210,10), '999999SG9999999999')			FROM num_data;
      to_char      
-------------------
       +         0
       +         0
       -  34338492
       +         4
       +   7799461
       +     16397
       +     93902
       -  83028485
       +     74881
       -  24926804
(10 rows)

--Testcase 793:
SELECT to_char(val::numeric(210,10), 'FM9999999999999999.999999999999999')	FROM num_data;
      to_char      
-------------------
 0.
 0.
 -34338492.215397
 4.31
 7799461.4119
 16397.038491
 93901.57763026
 -83028485.
 74881.
 -24926804.0450474
(10 rows)

--Testcase 794:
SELECT to_char(val::numeric(210,10), '9.999EEEE')				FROM num_data;
  to_char   
------------
  0.000e+00
  0.000e+00
 -3.434e+07
  4.310e+00
  7.799e+06
  1.640e+04
  9.390e+04
 -8.303e+07
  7.488e+04
 -2.493e+07
(10 rows)

--Testcase 795:
DELETE FROM v;
--Testcase 796:
INSERT INTO v(x) VALUES ('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan');
--Testcase 797:
SELECT x,
  to_char(x, '9.999EEEE') as numeric,
  to_char(x::float8, '9.999EEEE') as float8,
  to_char(x::float4, '9.999EEEE') as float4
FROM v;
     x      |  numeric   |   float8   |   float4   
------------+------------+------------+------------
          0 |  0.000e+00 |  0.000e+00 |  0.000e+00
       -4.2 | -4.200e+00 | -4.200e+00 | -4.200e+00
 4200000000 |  4.200e+09 |  4.200e+09 |  4.200e+09
    1.2e-05 |  1.200e-05 |  1.200e-05 |  1.200e-05
   Infinity |  #.####### |  #.####### |  #.#######
  -Infinity |  #.####### |  #.####### |  #.#######
        NaN |  #.####### |  #.####### |  #.#######
(7 rows)

--Testcase 1283:
DELETE FROM v;
--Testcase 1284:
INSERT INTO v(x) VALUES (-16379),(-16378),(-1234),(-789),(-45),(-5),(-4),(-3),(-2),(-1),(0),
         (1),(2),(3),(4),(5),(38),(275),(2345),(45678),(131070),(131071);
--Testcase 1285:
SELECT x,
  to_char(('1.2345e'||x)::numeric, '9.999EEEE') as numeric
FROM v;
   x    |    numeric     
--------+----------------
 -16379 |  1.235e-16379
 -16378 |  1.235e-16378
  -1234 |  1.235e-1234
   -789 |  1.235e-789
    -45 |  1.235e-45
     -5 |  1.235e-05
     -4 |  1.235e-04
     -3 |  1.235e-03
     -2 |  1.235e-02
     -1 |  1.235e-01
      0 |  1.235e+00
      1 |  1.235e+01
      2 |  1.235e+02
      3 |  1.235e+03
      4 |  1.235e+04
      5 |  1.235e+05
     38 |  1.235e+38
    275 |  1.235e+275
   2345 |  1.235e+2345
  45678 |  1.235e+45678
 131070 |  1.235e+131070
 131071 |  1.235e+131071
(22 rows)

--Testcase 798:
DELETE FROM v;
--Testcase 799:
INSERT INTO v(x) VALUES ('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan');
--Testcase 800:
SELECT x,
  to_char(x, 'MI9999999999.99') as numeric,
  to_char(x::float8, 'MI9999999999.99') as float8,
  to_char(x::float4, 'MI9999999999.99') as float4
FROM v;
     x      |    numeric     |     float8     |     float4     
------------+----------------+----------------+----------------
          0 |            .00 |            .00 |            .00
       -4.2 | -         4.20 | -         4.20 | -         4.20
 4200000000 |  4200000000.00 |  4200000000.00 |  4200000000
    1.2e-05 |            .00 |            .00 |            .00
   Infinity |    Infinity    |    Infinity    |    Infinity
  -Infinity | -  Infinity    | -  Infinity    | -  Infinity
        NaN |         NaN    |         NaN    |         NaN
(7 rows)

--Testcase 801:
DELETE FROM v;
--Testcase 802:
INSERT INTO v(x) VALUES ('0'::numeric),('-4.2'),('4.2e9'),('1.2e-5'),('inf'),('-inf'),('nan');
--Testcase 803:
SELECT x,
  to_char(x, 'MI99.99') as numeric,
  to_char(x::float8, 'MI99.99') as float8,
  to_char(x::float4, 'MI99.99') as float4
FROM v;
     x      | numeric | float8 | float4 
------------+---------+--------+--------
          0 |    .00  |    .00 |    .00
       -4.2 | - 4.20  | - 4.20 | - 4.20
 4200000000 |  ##.##  |  ##.## |  ##.
    1.2e-05 |    .00  |    .00 |    .00
   Infinity |  ##.##  |  ##.## |  ##.
  -Infinity | -##.##  | -##.## | -##.
        NaN |  ##.##  |  ##.## |  ##.##
(7 rows)

--Testcase 1286:
DELETE FROM v;
--Testcase 804:
DELETE FROM ceil_floor_round;
--Testcase 805:
INSERT INTO ceil_floor_round(a) VALUES ('100'::numeric);
--Testcase 806:
SELECT to_char(a::numeric, 'FM999.9') FROM ceil_floor_round;
 to_char 
---------
 100.
(1 row)

--Testcase 807:
SELECT to_char(a::numeric, 'FM999.') FROM ceil_floor_round;
 to_char 
---------
 100
(1 row)

--Testcase 808:
SELECT to_char(a::numeric, 'FM999') FROM ceil_floor_round;
 to_char 
---------
 100
(1 row)

DELETE FROM ceil_floor_round;
INSERT INTO ceil_floor_round(a) VALUES ('12345678901'::numeric);
SELECT to_char(a::float8, 'FM9999999999D9999900000000000000000') FROM ceil_floor_round;
     to_char     
-----------------
 ##########.####
(1 row)

DELETE FROM ceil_floor_round;
INSERT INTO ceil_floor_round(a) VALUES ('100'::numeric);
-- Check parsing of literal text in a format string
--Testcase 809:
SELECT to_char(a::numeric, 'foo999') FROM ceil_floor_round;
 to_char 
---------
 foo 100
(1 row)

--Testcase 810:
SELECT to_char(a::numeric, 'f\oo999') FROM ceil_floor_round;
 to_char  
----------
 f\oo 100
(1 row)

--Testcase 811:
SELECT to_char(a::numeric, 'f\\oo999') FROM ceil_floor_round;
  to_char  
-----------
 f\\oo 100
(1 row)

--Testcase 812:
SELECT to_char(a::numeric, 'f\"oo999') FROM ceil_floor_round;
 to_char  
----------
 f"oo 100
(1 row)

--Testcase 813:
SELECT to_char(a::numeric, 'f\\"oo999') FROM ceil_floor_round;
  to_char  
-----------
 f\"oo 100
(1 row)

--Testcase 814:
SELECT to_char(a::numeric, 'f"ool"999') FROM ceil_floor_round;
 to_char  
----------
 fool 100
(1 row)

--Testcase 815:
SELECT to_char(a::numeric, 'f"\ool"999') FROM ceil_floor_round;
 to_char  
----------
 fool 100
(1 row)

--Testcase 816:
SELECT to_char(a::numeric, 'f"\\ool"999') FROM ceil_floor_round;
  to_char  
-----------
 f\ool 100
(1 row)

--Testcase 817:
SELECT to_char(a::numeric, 'f"ool\"999') FROM ceil_floor_round;
 to_char  
----------
 fool"999
(1 row)

--Testcase 818:
SELECT to_char(a::numeric, 'f"ool\\"999') FROM ceil_floor_round;
  to_char  
-----------
 fool\ 100
(1 row)

-- TO_NUMBER()
--
--Testcase 819:
SET lc_numeric = 'C';
--Testcase 820:
CREATE FOREIGN TABLE to_number_test (
	id serial OPTIONS (rowkey 'true'),
	val text,
	fmt text
) SERVER griddb_svr;
--Testcase 821:
INSERT INTO to_number_test(val, fmt) VALUES
	('-34,338,492', '99G999G999'),
	('-34,338,492.654,878', '99G999G999D999G999'),
	('<564646.654564>', '999999.999999PR'),
	('0.00001-', '9.999999S'),
	('5.01-', 'FM9.999999S'),
	('5.01-', 'FM9.999999MI'),
	('5 4 4 4 4 8 . 7 8', '9 9 9 9 9 9 . 9 9'),
	('.01', 'FM9.99'),
	('.0', '99999999.99999999'),
	('0', '99.99'),
	('.-01', 'S99.99'),
	('.01-', '99.99S'),
	(' . 0 1-', ' 9 9 . 9 9 S'),
	('34,50','999,99'),
	('123,000','999G'),
	('123456','999G999'),
	('$1234.56','L9,999.99'),
	('$1234.56','L99,999.99'),
	('$1,234.56','L99,999.99'),
	('1234.56','L99,999.99'),
	('1,234.56','L99,999.99'),
	('42nd', '99th');
--Testcase 822:
SELECT id AS to_number,  to_number(val, fmt) from to_number_test;
 to_number |    to_number     
-----------+------------------
         1 |        -34338492
         2 | -34338492.654878
         3 |   -564646.654564
         4 |         -0.00001
         5 |            -5.01
         6 |            -5.01
         7 |        544448.78
         8 |             0.01
         9 |              0.0
        10 |                0
        11 |            -0.01
        12 |            -0.01
        13 |            -0.01
        14 |             3450
        15 |              123
        16 |           123456
        17 |          1234.56
        18 |          1234.56
        19 |          1234.56
        20 |          1234.56
        21 |          1234.56
        22 |               42
(22 rows)

--Testcase 823:
RESET lc_numeric;
--Testcase 824:
DROP FOREIGN TABLE to_number_test;
--
-- Input syntax
--
--Testcase 825:
CREATE FOREIGN TABLE num_input_test (id serial options (rowkey 'true'), n1 float8) SERVER griddb_svr;
-- good inputs
--Testcase 826:
INSERT INTO num_input_test(n1) VALUES (' 123');
--Testcase 827:
INSERT INTO num_input_test(n1) VALUES ('   3245874    ');
--Testcase 828:
INSERT INTO num_input_test(n1) VALUES ('  -93853');
--Testcase 829:
INSERT INTO num_input_test(n1) VALUES ('555.50');
--Testcase 830:
INSERT INTO num_input_test(n1) VALUES ('-555.50');
--Testcase 831:
INSERT INTO num_input_test(n1) VALUES ('NaN ');
--Testcase 832:
INSERT INTO num_input_test(n1) VALUES ('        nan');
--Testcase 833:
INSERT INTO num_input_test(n1) VALUES (' inf ');
--Testcase 834:
INSERT INTO num_input_test(n1) VALUES (' +inf ');
--Testcase 835:
INSERT INTO num_input_test(n1) VALUES (' -inf ');
--Testcase 836:
INSERT INTO num_input_test(n1) VALUES (' Infinity ');
--Testcase 837:
INSERT INTO num_input_test(n1) VALUES (' +inFinity ');
--Testcase 838:
INSERT INTO num_input_test(n1) VALUES (' -INFINITY ');
-- GriDB not support numeric type like Postgres. These value not valid with float8 type
INSERT INTO num_input_test(n1) VALUES ('12_000_000_000');
ERROR:  invalid input syntax for type double precision: "12_000_000_000"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('12_000_000_000');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('12_000.123_456');
ERROR:  invalid input syntax for type double precision: "12_000.123_456"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('12_000.123_456');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('23_000_000_000e-1_0');
ERROR:  invalid input syntax for type double precision: "23_000_000_000e-1_0"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('23_000_000_000e-1_0'...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e1_0');
ERROR:  invalid input syntax for type double precision: ".000_000_000_123e1_0"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e1_0...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e+1_1');
ERROR:  invalid input syntax for type double precision: ".000_000_000_123e+1_1"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('.000_000_000_123e+1_...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0b10001110111100111100001001010');
ERROR:  invalid input syntax for type double precision: "0b10001110111100111100001001010"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0b100011101111001111...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('  -0B_1010_1011_0101_0100_1010_1001_1000_1100_1110_1011_0001_1111_0000_1010_1101_0010  ');
ERROR:  invalid input syntax for type double precision: "  -0B_1010_1011_0101_0100_1010_1001_1000_1100_1110_1011_0001_1111_0000_1010_1101_0010  "
LINE 1: INSERT INTO num_input_test(n1) VALUES ('  -0B_1010_1011_0101...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('  +0o112402761777 ');
ERROR:  invalid input syntax for type double precision: "  +0o112402761777 "
LINE 1: INSERT INTO num_input_test(n1) VALUES ('  +0o112402761777 ')...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('-0O0012_5524_5230_6334_3167_0261');
ERROR:  invalid input syntax for type double precision: "-0O0012_5524_5230_6334_3167_0261"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('-0O0012_5524_5230_63...
                                               ^
INSERT INTO num_input_test(n1) VALUES ('-0x0000000000000000000000000deadbeef'); -- valid with float8 type
INSERT INTO num_input_test(n1) VALUES (' 0X_30b1_F33a_6DF0_bD4E_64DF_9BdA_7D15 ');
ERROR:  invalid input syntax for type double precision: " 0X_30b1_F33a_6DF0_bD4E_64DF_9BdA_7D15 "
LINE 1: INSERT INTO num_input_test(n1) VALUES (' 0X_30b1_F33a_6DF0_b...
                                               ^
-- bad inputs
--Testcase 839:
INSERT INTO num_input_test(n1) VALUES ('     ');
ERROR:  invalid input syntax for type double precision: "     "
LINE 1: INSERT INTO num_input_test(n1) VALUES ('     ');
                                               ^
--Testcase 840:
INSERT INTO num_input_test(n1) VALUES ('   1234   %');
ERROR:  invalid input syntax for type double precision: "   1234   %"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('   1234   %');
                                               ^
--Testcase 841:
INSERT INTO num_input_test(n1) VALUES ('xyz');
ERROR:  invalid input syntax for type double precision: "xyz"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('xyz');
                                               ^
--Testcase 842:
INSERT INTO num_input_test(n1) VALUES ('- 1234');
ERROR:  invalid input syntax for type double precision: "- 1234"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('- 1234');
                                               ^
--Testcase 843:
INSERT INTO num_input_test(n1) VALUES ('5 . 0');
ERROR:  invalid input syntax for type double precision: "5 . 0"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('5 . 0');
                                               ^
--Testcase 844:
INSERT INTO num_input_test(n1) VALUES ('5. 0   ');
ERROR:  invalid input syntax for type double precision: "5. 0   "
LINE 1: INSERT INTO num_input_test(n1) VALUES ('5. 0   ');
                                               ^
--Testcase 845:
INSERT INTO num_input_test(n1) VALUES ('');
ERROR:  invalid input syntax for type double precision: ""
LINE 1: INSERT INTO num_input_test(n1) VALUES ('');
                                               ^
--Testcase 846:
INSERT INTO num_input_test(n1) VALUES (' N aN ');
ERROR:  invalid input syntax for type double precision: " N aN "
LINE 1: INSERT INTO num_input_test(n1) VALUES (' N aN ');
                                               ^
-- Success because valid with float8 type
INSERT INTO num_input_test(n1) VALUES ('+NaN');
INSERT INTO num_input_test(n1) VALUES ('-NaN');
--Testcase 847:
INSERT INTO num_input_test(n1) VALUES ('+ infinity');
ERROR:  invalid input syntax for type double precision: "+ infinity"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('+ infinity');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('_123');
ERROR:  invalid input syntax for type double precision: "_123"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('_123');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('123_');
ERROR:  invalid input syntax for type double precision: "123_"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('123_');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('12__34');
ERROR:  invalid input syntax for type double precision: "12__34"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('12__34');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('123_.456');
ERROR:  invalid input syntax for type double precision: "123_.456"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('123_.456');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('123._456');
ERROR:  invalid input syntax for type double precision: "123._456"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('123._456');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('1.2e_34');
ERROR:  invalid input syntax for type double precision: "1.2e_34"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('1.2e_34');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('1.2e34_');
ERROR:  invalid input syntax for type double precision: "1.2e34_"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('1.2e34_');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('1.2e3__4');
ERROR:  invalid input syntax for type double precision: "1.2e3__4"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('1.2e3__4');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0b1112');
ERROR:  invalid input syntax for type double precision: "0b1112"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0b1112');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0c1112');
ERROR:  invalid input syntax for type double precision: "0c1112"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0c1112');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0o12345678');
ERROR:  invalid input syntax for type double precision: "0o12345678"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0o12345678');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0x1eg');
ERROR:  invalid input syntax for type double precision: "0x1eg"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x1eg');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0x12.34'); -- valid with float8 type
INSERT INTO num_input_test(n1) VALUES ('0x__1234');
ERROR:  invalid input syntax for type double precision: "0x__1234"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x__1234');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0x1234_');
ERROR:  invalid input syntax for type double precision: "0x1234_"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x1234_');
                                               ^
INSERT INTO num_input_test(n1) VALUES ('0x12__34');
ERROR:  invalid input syntax for type double precision: "0x12__34"
LINE 1: INSERT INTO num_input_test(n1) VALUES ('0x12__34');
                                               ^
--Testcase 848:
SELECT n1 FROM num_input_test;
     n1      
-------------
         123
     3245874
      -93853
       555.5
      -555.5
         NaN
         NaN
    Infinity
    Infinity
   -Infinity
    Infinity
    Infinity
   -Infinity
 -3735928559
         NaN
         NaN
   18.203125
(17 rows)

-- Also try it with non-error-throwing API
CREATE FOREIGN TABLE non_error_throwing_api(id serial OPTIONS (rowkey 'true'), f1 text) SERVER griddb_svr;
--Testcase 159:
INSERT INTO non_error_throwing_api VALUES (1, '34.5'), (2, '34xyz'), (3, '1e400000') , (4, '1234.567'), (5, '0x1234.567');
SELECT pg_input_is_valid(f1, 'numeric') FROM non_error_throwing_api WHERE id = 1;
 pg_input_is_valid 
-------------------
 t
(1 row)

SELECT pg_input_is_valid(f1, 'numeric') FROM non_error_throwing_api WHERE id = 2;
 pg_input_is_valid 
-------------------
 f
(1 row)

SELECT pg_input_is_valid(f1, 'numeric') FROM non_error_throwing_api WHERE id = 3;
 pg_input_is_valid 
-------------------
 f
(1 row)

SELECT * FROM pg_input_error_info((SELECT f1 FROM non_error_throwing_api WHERE id = 3), 'numeric');
            message             | detail | hint | sql_error_code 
--------------------------------+--------+------+----------------
 value overflows numeric format |        |      | 22003
(1 row)

SELECT pg_input_is_valid(f1, 'numeric(8,4)') FROM non_error_throwing_api WHERE id = 4;
 pg_input_is_valid 
-------------------
 t
(1 row)

SELECT pg_input_is_valid(f1, 'numeric(7,4)') FROM non_error_throwing_api WHERE id = 4;
 pg_input_is_valid 
-------------------
 f
(1 row)

SELECT * FROM pg_input_error_info((SELECT f1 FROM non_error_throwing_api WHERE id = 4), 'numeric(7,4)');
        message         |                                      detail                                       | hint | sql_error_code 
------------------------+-----------------------------------------------------------------------------------+------+----------------
 numeric field overflow | A field with precision 7, scale 4 must round to an absolute value less than 10^3. |      | 22003
(1 row)

SELECT * FROM pg_input_error_info((SELECT f1 FROM non_error_throwing_api WHERE id = 5), 'numeric');
                       message                       | detail | hint | sql_error_code 
-----------------------------------------------------+--------+------+----------------
 invalid input syntax for type numeric: "0x1234.567" |        |      | 22P02
(1 row)

--
-- Test precision and scale typemods
--
CREATE FOREIGN TABLE num_typemod_test (
    id serial options (rowkey 'true'),
    millions float8,
    thousands float8,
    units float8,
    thousandths float8,
    millionths float8
) SERVER griddb_svr;
\d num_typemod_test
                                        Foreign table "public.num_typemod_test"
   Column    |       Type       | Collation | Nullable |                   Default                    |   FDW options   
-------------+------------------+-----------+----------+----------------------------------------------+-----------------
 id          | integer          |           | not null | nextval('num_typemod_test_id_seq'::regclass) | (rowkey 'true')
 millions    | double precision |           |          |                                              | 
 thousands   | double precision |           |          |                                              | 
 units       | double precision |           |          |                                              | 
 thousandths | double precision |           |          |                                              | 
 millionths  | double precision |           |          |                                              | 
Server: griddb_svr

-- rounding of valid inputs
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (123456, 123, 0.123, 0.000123, 0.000000123);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (654321, 654, 0.654, 0.000654, 0.000000654);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (2345678, 2345, 2.345, 0.002345, 0.000002345);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (7654321, 7654, 7.654, 0.007654, 0.000007654);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (12345678, 12345, 12.345, 0.012345, 0.000012345);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (87654321, 87654, 87.654, 0.087654, 0.000087654);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (123456789, 123456, 123.456, 0.123456, 0.000123456);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES (987654321, 987654, 987.654, 0.987654, 0.000987654);
INSERT INTO num_typemod_test(millions, thousands, units, thousandths, millionths) VALUES ('NaN', 'NaN', 'NaN', 'NaN', 'NaN');
SELECT scale(millions::numeric), millions, thousands, units, thousandths, millionths FROM num_typemod_test ORDER BY millions;
 scale | millions  | thousands |  units  | thousandths | millionths  
-------+-----------+-----------+---------+-------------+-------------
     0 |    123456 |       123 |   0.123 |    0.000123 |    1.23e-07
     0 |    654321 |       654 |   0.654 |    0.000654 |    6.54e-07
     0 |   2345678 |      2345 |   2.345 |    0.002345 |   2.345e-06
     0 |   7654321 |      7654 |   7.654 |    0.007654 |   7.654e-06
     0 |  12345678 |     12345 |  12.345 |    0.012345 |  1.2345e-05
     0 |  87654321 |     87654 |  87.654 |    0.087654 |  8.7654e-05
     0 | 123456789 |    123456 | 123.456 |    0.123456 | 0.000123456
     0 | 987654321 |    987654 | 987.654 |    0.987654 | 0.000987654
       |       NaN |       NaN |     NaN |         NaN |         NaN
(9 rows)

-- invalid inputs
INSERT INTO num_typemod_test (millions) VALUES ('inf');
INSERT INTO num_typemod_test (millions) VALUES (999500000);
INSERT INTO num_typemod_test (thousands) VALUES (999500);
INSERT INTO num_typemod_test (units) VALUES (999.5);
INSERT INTO num_typemod_test (thousandths) VALUES (0.9995);
INSERT INTO num_typemod_test (millionths) VALUES (0.0009995);
--
-- Test some corner cases for multiplication
--
--Testcase 849:
CREATE FOREIGN TABLE num_test_calc (
    id serial options (rowkey 'true'),
    n1 float8,
    n2 float8
) SERVER griddb_svr;
--Testcase 850:
DELETE FROM num_test_calc;
--Testcase 851:
INSERT INTO num_test_calc(n1, n2) VALUES (4790999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
--Testcase 852:
INSERT INTO num_test_calc(n1, n2) VALUES (4790999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
--Testcase 853:
INSERT INTO num_test_calc(n1, n2) VALUES (4789999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
--Testcase 854:
INSERT INTO num_test_calc(n1, n2) VALUES (4770999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
--Testcase 855:
INSERT INTO num_test_calc(n1, n2) VALUES (4769999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
--Testcase 856:
SELECT n1::numeric * n2::numeric FROM num_test_calc;
                                                                                     ?column?                                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 47910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 47910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 47900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 47710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
 47700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
(5 rows)

--Testcase 1287:
DELETE FROM num_test_calc;
--Testcase 1288:
INSERT INTO num_test_calc(n1, n2) VALUES ((0.1 - 2e-16383), (0.1 - 3e-16383));
--Testcase 1289:
select trim_scale(n1::numeric * n2::numeric) from num_test_calc;
 trim_scale 
------------
       0.01
(1 row)

--
-- Test some corner cases for division
--
--Testcase 857:
DELETE FROM num_test_calc;
--Testcase 858:
INSERT INTO num_test_calc(n1, n2) VALUES (999999999999999999999, 1000000000000000000000);
--Testcase 859:
SELECT n1::numeric/n2::numeric FROM num_test_calc;
        ?column?        
------------------------
 1.00000000000000000000
(1 row)

--Testcase 860:
SELECT div(n1::numeric,n2::numeric) FROM num_test_calc;
 div 
-----
   1
(1 row)

--Testcase 861:
SELECT mod(n1::numeric,n2::numeric) FROM num_test_calc;
 mod 
-----
   0
(1 row)

--Testcase 862:
SELECT div(-n1::numeric,n2::numeric) FROM num_test_calc;
 div 
-----
  -1
(1 row)

--Testcase 863:
SELECT mod(-n1::numeric,n2::numeric) FROM num_test_calc;
 mod 
-----
   0
(1 row)

--Testcase 864:
SELECT div(-n1::numeric,n2::numeric)*n2 + 
	mod(-n1::numeric,n2::numeric) FROM num_test_calc;
 ?column? 
----------
   -1e+21
(1 row)

--Testcase 865:
DELETE FROM num_test_calc;
--Testcase 866:
INSERT INTO num_test_calc(n1, n2) VALUES (70.0, 70);
--Testcase 867:
SELECT mod (n1::numeric,n2::numeric) FROM num_test_calc;
 mod 
-----
   0
(1 row)

--Testcase 868:
SELECT div (n1::numeric,n2::numeric) FROM num_test_calc;
 div 
-----
   1
(1 row)

--Testcase 869:
SELECT n1::numeric / n2::numeric FROM num_test_calc;
        ?column?        
------------------------
 1.00000000000000000000
(1 row)

--Testcase 870:
DELETE FROM num_test_calc;
--Testcase 871:
INSERT INTO num_test_calc(n1, n2) VALUES (12345678901234567890, 123);
--Testcase 872:
SELECT n1::numeric % n2::numeric FROM num_test_calc;
 ?column? 
----------
       85
(1 row)

--Testcase 873:
SELECT n1::numeric / n2::numeric FROM num_test_calc;
      ?column?      
--------------------
 100371373180769106
(1 row)

--Testcase 874:
SELECT div(n1::numeric, n2::numeric) FROM num_test_calc;
        div         
--------------------
 100371373180769105
(1 row)

--Testcase 875:
SELECT div(n1::numeric, n2::numeric) * n2::numeric + (n1::numeric % n2::numeric) FROM num_test_calc;
       ?column?       
----------------------
 12345678901234600000
(1 row)

--
-- Test some corner cases for square root
--
--Testcase 876:
DELETE FROM num_test_calc;
--Testcase 877:
INSERT INTO num_test_calc(n1, n2) VALUES (1.000000000000003, 0);
--Testcase 878:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 1.000000000000000
(1 row)

--Testcase 879:
DELETE FROM num_test_calc;
--Testcase 880:
INSERT INTO num_test_calc(n1, n2) VALUES (1.000000000000004, 0);
--Testcase 881:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 1.000000000000000
(1 row)

--Testcase 882:
DELETE FROM num_test_calc;
--Testcase 883:
INSERT INTO num_test_calc(n1, n2) VALUES (96627521408608.56340355805, 0);
--Testcase 884:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 9829929.878112488
(1 row)

--Testcase 885:
DELETE FROM num_test_calc;
--Testcase 886:
INSERT INTO num_test_calc(n1, n2) VALUES (96627521408608.56340355806, 0);
--Testcase 887:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 9829929.878112488
(1 row)

--Testcase 888:
DELETE FROM num_test_calc;
--Testcase 889:
INSERT INTO num_test_calc(n1, n2) VALUES (515549506212297735.073688290367, 0);
--Testcase 890:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 718017761.7665861
(1 row)

--Testcase 891:
DELETE FROM num_test_calc;
--Testcase 892:
INSERT INTO num_test_calc(n1, n2) VALUES (515549506212297735.073688290368, 0);
--Testcase 893:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 718017761.7665861
(1 row)

--Testcase 894:
DELETE FROM num_test_calc;
--Testcase 895:
INSERT INTO num_test_calc(n1, n2) VALUES (8015491789940783531003294973900306, 0);
--Testcase 896:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 89529278953539998
(1 row)

--Testcase 897:
DELETE FROM num_test_calc;
--Testcase 898:
INSERT INTO num_test_calc(n1, n2) VALUES (8015491789940783531003294973900307, 0);
--Testcase 899:
SELECT sqrt(n1::numeric) FROM num_test_calc;
       sqrt        
-------------------
 89529278953539998
(1 row)

--
-- Test code path for raising to integer powers
--
--Testcase 900:
DELETE FROM num_test_calc;
--Testcase 901:
INSERT INTO num_test_calc(n1, n2) VALUES (10.0, -2147483648);
--Testcase 902:
SELECT n1::numeric ^ n2::numeric as rounds_to_zero FROM num_test_calc;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               rounds_to_zero                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               


(1 row)

--Testcase 903:
DELETE FROM num_test_calc;
--Testcase 904:
INSERT INTO num_test_calc(n1, n2) VALUES (10.0, -2147483647);
--Testcase 905:
SELECT n1::numeric ^ n2::numeric as rounds_to_zero FROM num_test_calc;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               rounds_to_zero                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               


(1 row)

--Testcase 906:
DELETE FROM num_test_calc;
--Testcase 907:
INSERT INTO num_test_calc(n1, n2) VALUES (10.0, 2147483647);
--Testcase 908:
SELECT n1::numeric ^ n2::numeric as overflows FROM num_test_calc;
ERROR:  value overflows numeric format
--Testcase 909:
DELETE FROM num_test_calc;
--Testcase 910:
INSERT INTO num_test_calc(n1, n2) VALUES (117743296169.0, 1000000000);
--Testcase 911:
SELECT n1::numeric ^ n2::numeric as overflows FROM num_test_calc;
ERROR:  value overflows numeric format
-- cases that used to return inaccurate results
--Testcase 912:
DELETE FROM num_test_calc;
--Testcase 913:
INSERT INTO num_test_calc(n1, n2) VALUES (3.789, 21.0000000000000000);
--Testcase 914:
INSERT INTO num_test_calc(n1, n2) VALUES (3.789, 35.0000000000000000);
--Testcase 915:
INSERT INTO num_test_calc(n1, n2) VALUES (1.2, 345);
--Testcase 916:
INSERT INTO num_test_calc(n1, n2) VALUES (0.12, (-20));
--Testcase 917:
INSERT INTO num_test_calc(n1, n2) VALUES (1.000000000123, (-2147483648));
--Testcase 918:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
            ?column?            
--------------------------------
             1409343026052.8716
      177158169650516670809.382
 2077446682327378559843444695.6
         2608405330458882702.55
             0.7678656556403084
(5 rows)

--Testcase 1290:
DELETE FROM num_test_calc;
--Testcase 1291:
INSERT INTO num_test_calc(n1, n2) VALUES (0.9999999999, (23300000000000));
--Testcase 1292:
SELECT coalesce(nullif(n1::numeric ^ n2::numeric, 0), 0) AS rounds_to_zero FROM num_test_calc;
 rounds_to_zero 
----------------
              0
(1 row)

DELETE FROM num_test_calc;
INSERT INTO num_test_calc(n1, n2) VALUES ((1 - 1.500012345678e-1000), 1.45e1003);
is out of range for type double precision
SELECT round((n1::numeric ^ n2::numeric) * 1e1000) FROM num_test_calc;
 round 
-------
(0 rows)

-- cases that used to error out
--Testcase 919:
DELETE FROM num_test_calc;
--Testcase 920:
INSERT INTO num_test_calc(n1, n2) VALUES (0.12, -25);
--Testcase 921:
INSERT INTO num_test_calc(n1, n2) VALUES (0.5678, -85);
--Testcase 922:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
          ?column?           
-----------------------------
 104825960103961013959336.50
  782333637740774446257.7719
(2 rows)

--Testcase 1293:
DELETE FROM num_test_calc;
--Testcase 1294:
INSERT INTO num_test_calc(n1, n2) VALUES (0.9999999999, 70000000000000);
--Testcase 1295:
SELECT coalesce(nullif(n1::numeric ^ n2::numeric, 0), 0) AS underflows FROM num_test_calc;
 underflows 
------------
          0
(1 row)

-- negative base to integer powers
--Testcase 1296:
DELETE FROM num_test_calc;
--Testcase 1297:
INSERT INTO num_test_calc(n1, n2) VALUES (-1.0, 2147483646);
--Testcase 1298:
INSERT INTO num_test_calc(n1, n2) VALUES (-1.0, 2147483647);
--Testcase 1299:
INSERT INTO num_test_calc(n1, n2) VALUES (-1.0, 2147483648);
--Testcase 1300:
INSERT INTO num_test_calc(n1, n2) VALUES (-1.0, 1000000000000000);
--Testcase 1301:
INSERT INTO num_test_calc(n1, n2) VALUES (-1.0, 1000000000000001);
--Testcase 1302:
SELECT (n1 ^ n2)::numeric(17,16) FROM num_test_calc;
       numeric       
---------------------
  1.0000000000000000
 -1.0000000000000000
  1.0000000000000000
  1.0000000000000000
 -1.0000000000000000
(5 rows)

-- integer powers of 10
DELETE FROM num_test_calc;
INSERT INTO num_test_calc(n1) SELECT * from generate_series(-20, 20);
select n1, 10.0 ^ n1 as "10^n", (10.0 ^ n1) * (10.0 ^ (-n1)) = 1 as ok
from num_test_calc;
 n1  |      10^n       | ok 
-----+-----------------+----
 -20 |           1e-20 | t
 -19 |           1e-19 | t
 -18 |           1e-18 | t
 -17 |           1e-17 | t
 -16 |           1e-16 | t
 -15 |           1e-15 | t
 -14 |           1e-14 | t
 -13 |           1e-13 | t
 -12 |           1e-12 | t
 -11 |           1e-11 | f
 -10 |           1e-10 | t
  -9 |           1e-09 | t
  -8 |           1e-08 | t
  -7 |           1e-07 | t
  -6 |           1e-06 | t
  -5 |           1e-05 | t
  -4 |          0.0001 | t
  -3 |           0.001 | t
  -2 |            0.01 | t
  -1 |             0.1 | t
   0 |               1 | t
   1 |              10 | t
   2 |             100 | t
   3 |            1000 | t
   4 |           10000 | t
   5 |          100000 | t
   6 |         1000000 | t
   7 |        10000000 | t
   8 |       100000000 | t
   9 |      1000000000 | t
  10 |     10000000000 | t
  11 |    100000000000 | f
  12 |   1000000000000 | t
  13 |  10000000000000 | t
  14 | 100000000000000 | t
  15 |           1e+15 | t
  16 |           1e+16 | t
  17 |           1e+17 | t
  18 |           1e+18 | t
  19 |           1e+19 | t
  20 |           1e+20 | t
(41 rows)

--
-- Tests for raising to non-integer powers
--
-- special cases
--Testcase 923:
DELETE FROM num_test_calc;
--Testcase 924:
INSERT INTO num_test_calc(n1, n2) VALUES (0.0, 0.0);
--Testcase 925:
INSERT INTO num_test_calc(n1, n2) VALUES (-12.34, 0.0);
--Testcase 926:
INSERT INTO num_test_calc(n1, n2) VALUES (12.34, 0.0);
--Testcase 927:
INSERT INTO num_test_calc(n1, n2) VALUES (0.0, 12.34);
--Testcase 928:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
      ?column?      
--------------------
 1.0000000000000000
 1.0000000000000000
 1.0000000000000000
 0.0000000000000000
(4 rows)

-- NaNs
--Testcase 929:
DELETE FROM num_test_calc;
--Testcase 930:
INSERT INTO num_test_calc(n1, n2) VALUES ('NaN'::numeric, 'NaN'::numeric);
--Testcase 931:
INSERT INTO num_test_calc(n1, n2) VALUES ('NaN'::numeric, 0);
--Testcase 932:
INSERT INTO num_test_calc(n1, n2) VALUES ('NaN'::numeric, 1);
--Testcase 933:
INSERT INTO num_test_calc(n1, n2) VALUES (0, 'NaN'::numeric);
--Testcase 934:
INSERT INTO num_test_calc(n1, n2) VALUES (1, 'NaN'::numeric);
--Testcase 935:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
 ?column? 
----------
      NaN
        1
      NaN
      NaN
        1
(5 rows)

-- invalid inputs
--Testcase 936:
DELETE FROM num_test_calc;
--Testcase 937:
INSERT INTO num_test_calc(n1, n2) VALUES (0.0, -12.34);
--Testcase 938:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
ERROR:  zero raised to a negative power is undefined
--Testcase 939:
DELETE FROM num_test_calc;
--Testcase 940:
INSERT INTO num_test_calc(n1, n2) VALUES (-12.34, 1.2);
--Testcase 941:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
ERROR:  a negative number raised to a non-integer power yields a complex result
-- cases that used to generate inaccurate results
BEGIN;
--Testcase 942:
DELETE FROM num_test_calc;
--Testcase 943:
INSERT INTO num_test_calc(n1, n2) VALUES (32.1, 9.8);
--Testcase 944:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
      ?column?      
--------------------
 580429286790711.10
(1 row)

--Testcase 945:
DELETE FROM num_test_calc;
--Testcase 946:
INSERT INTO num_test_calc(n1, n2) VALUES (32.1, -9.8);
--Testcase 947:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
             ?column?             
----------------------------------
 0.000000000000001722862754788209
(1 row)

--Testcase 948:
DELETE FROM num_test_calc;
--Testcase 949:
INSERT INTO num_test_calc(n1, n2) VALUES (12.3, 45.6);
--Testcase 950:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
                       ?column?                       
------------------------------------------------------
 50081010321492803393171165777624533697036806969694.9
(1 row)

--Testcase 951:
DELETE FROM num_test_calc;
--Testcase 952:
INSERT INTO num_test_calc(n1, n2) VALUES (12.3, (-45.6));
--Testcase 953:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
                              ?column?                               
---------------------------------------------------------------------
 0.00000000000000000000000000000000000000000000000001996764828785491
(1 row)

ROLLBACK;
-- big test
-- out of range
BEGIN;
--Testcase 954:
DELETE FROM num_input_test;
--Testcase 955:
INSERT INTO num_test_calc(n1, n2) VALUES (1.234, 5678);
--Testcase 956:
SELECT n1::numeric ^ n2::numeric FROM num_test_calc;
ERROR:  a negative number raised to a non-integer power yields a complex result
ROLLBACK;
--
-- Tests for EXP()
--
-- special cases
--Testcase 957:
DELETE FROM num_input_test;
--Testcase 958:
INSERT INTO num_input_test(n1) VALUES ('0.0');
--Testcase 959:
SELECT exp(n1::numeric) from num_input_test;
        exp         
--------------------
 1.0000000000000000
(1 row)

--Testcase 960:
DELETE FROM num_input_test;
--Testcase 961:
INSERT INTO num_input_test(n1) VALUES ('1.0');
--Testcase 962:
SELECT exp(n1::numeric) from num_input_test;
        exp         
--------------------
 2.7182818284590452
(1 row)

--Testcase 963:
DELETE FROM num_input_test;
--Testcase 964:
INSERT INTO num_input_test(n1) VALUES ('1.0');
--Testcase 965:
SELECT exp(n1::numeric(71, 70)) from num_input_test;
                                   exp                                    
--------------------------------------------------------------------------
 2.7182818284590452353602874713526624977572470936999595749669676277240766
(1 row)

--Testcase 966:
DELETE FROM num_input_test;
--Testcase 967:
INSERT INTO num_input_test(n1) VALUES ('nan');
--Testcase 968:
SELECT exp(n1::numeric(71, 70)) from num_input_test;
 exp 
-----
 NaN
(1 row)

--Testcase 969:
DELETE FROM num_input_test;
--Testcase 970:
INSERT INTO num_input_test(n1) VALUES ('inf');
--Testcase 971:
SELECT exp(n1::numeric(71, 70)) from num_input_test;
ERROR:  numeric field overflow
DETAIL:  A field with precision 71, scale 70 cannot hold an infinite value.
--Testcase 972:
DELETE FROM num_input_test;
--Testcase 973:
INSERT INTO num_input_test(n1) VALUES ('-inf');
--Testcase 974:
SELECT exp(n1::numeric(71, 70)) from num_input_test;
ERROR:  numeric field overflow
DETAIL:  A field with precision 71, scale 70 cannot hold an infinite value.
--Testcase 1303:
DELETE FROM num_input_test;
--Testcase 1304:
INSERT INTO num_input_test(n1) VALUES (-5000::numeric);
--Testcase 1305:
SELECT coalesce(nullif(exp(n1::numeric), 0), 0) AS rounds_to_zero FROM num_input_test;
 rounds_to_zero 
----------------
              0
(1 row)

--Testcase 1306:
DELETE FROM num_input_test;
--Testcase 1307:
INSERT INTO num_input_test(n1) VALUES (-10000::numeric);
--Testcase 1308:
SELECT coalesce(nullif(exp(n1::numeric), 0), 0) AS underflows FROM num_input_test;
 underflows 
------------
          0
(1 row)

-- cases that used to generate inaccurate results
--Testcase 975:
DELETE FROM num_input_test;
--Testcase 976:
INSERT INTO num_input_test(n1) VALUES ('32.999');
--Testcase 977:
SELECT exp(n1::numeric) from num_input_test;
         exp         
---------------------
 214429043492155.053
(1 row)

--Testcase 978:
SELECT exp(-n1::numeric) from num_input_test;
               exp                
----------------------------------
 0.000000000000004663547361468248
(1 row)

--Testcase 979:
DELETE FROM num_input_test;
--Testcase 980:
INSERT INTO num_input_test(n1) VALUES ('123.456');
--Testcase 981:
SELECT exp(n1::numeric) from num_input_test;
                            exp                             
------------------------------------------------------------
 413294435277809344957685441227343146614594393746575438.725
(1 row)

--Testcase 982:
SELECT exp(-n1::numeric) from num_input_test;
                                   exp                                   
-------------------------------------------------------------------------
 0.000000000000000000000000000000000000000000000000000002419582541264601
(1 row)

-- big test
--Testcase 983:
DELETE FROM num_input_test;
--Testcase 984:
INSERT INTO num_input_test(n1) VALUES ('1234.5678');
--Testcase 985:
SELECT exp(n1::numeric) from num_input_test;
                                                                                                                                                                                                                                                                              exp                                                                                                                                                                                                                                                                               

 146549072930959479983482138503979804217622199675223653966270157446954995433819741094410764947112047906012815540251009949604426069672532417736057033099274204598385314594846509975629046864798765888104789074984927709616261452461385220475510438783429612447831614003668421849727379202555580791042606170523016207262965336641214601082882495255771621327088265411334088968112458492660609809762865582162764292604697957813514621259353683899630997077707406305730694385703091201347848855199354307506425820147289848677003277208302716466011827836279231.9667
(1 row)

--
-- Tests for generate_series
--
--Testcase 986:
DELETE FROM num_input_test;
--Testcase 987:
INSERT INTO num_input_test(n1) select * from generate_series(0.0, 4.0);
--Testcase 988:
SELECT n1::numeric(2,1) FROM num_input_test;
 n1  
-----
 0.0
 1.0
 2.0
 3.0
 4.0
(5 rows)

--Testcase 989:
DELETE FROM num_input_test;
--Testcase 990:
INSERT INTO num_input_test(n1) select * from generate_series(0.1, 4.0, 1.3);
--Testcase 991:
SELECT n1::numeric(2,1) FROM num_input_test;
 n1  
-----
 0.1
 1.4
 2.7
 4.0
(4 rows)

--Testcase 992:
DELETE FROM num_input_test;
--Testcase 993:
INSERT INTO num_input_test(n1) select * from generate_series(4.0, -1.5, -2.2);
--Testcase 994:
SELECT n1::numeric(2,1) FROM num_input_test;
  n1  
------
  4.0
  1.8
 -0.4
(3 rows)

-- Trigger errors
--Testcase 995:
DELETE FROM num_input_test;
--Testcase 996:
INSERT INTO num_input_test(n1) select * from generate_series(-100::numeric, 100::numeric, 0::numeric);
ERROR:  step size cannot equal zero
--Testcase 997:
SELECT n1 FROM num_input_test;
 n1 
----
(0 rows)

--Testcase 998:
DELETE FROM num_input_test;
--Testcase 999:
INSERT INTO num_input_test(n1) select * from generate_series(-100::numeric, 100::numeric, 'nan'::numeric);
ERROR:  step size cannot be NaN
--Testcase 1000:
SELECT n1 FROM num_input_test;
 n1 
----
(0 rows)

--Testcase 1001:
DELETE FROM num_input_test;
--Testcase 1002:
INSERT INTO num_input_test(n1) select * from generate_series('nan'::numeric, 100::numeric, 10::numeric);
ERROR:  start value cannot be NaN
--Testcase 1003:
SELECT n1 FROM num_input_test;
 n1 
----
(0 rows)

--Testcase 1004:
DELETE FROM num_input_test;
--Testcase 1005:
INSERT INTO num_input_test(n1) select * from generate_series(0::numeric, 'nan'::numeric, 10::numeric);
ERROR:  stop value cannot be NaN
--Testcase 1006:
SELECT n1 FROM num_input_test;
 n1 
----
(0 rows)

--Testcase 1007:
DELETE FROM num_input_test;
--Testcase 1008:
INSERT INTO num_input_test(n1) select * from generate_series('inf'::numeric, 'inf'::numeric, 10::numeric);
ERROR:  start value cannot be infinity
--Testcase 1009:
SELECT n1 FROM num_input_test;
 n1 
----
(0 rows)

--Testcase 1010:
DELETE FROM num_input_test;
--Testcase 1011:
INSERT INTO num_input_test(n1) select * from generate_series(0::numeric, 'inf'::numeric, 10::numeric);
ERROR:  stop value cannot be infinity
--Testcase 1012:
SELECT n1 FROM num_input_test;
 n1 
----
(0 rows)

--Testcase 1013:
DELETE FROM num_input_test;
--Testcase 1014:
INSERT INTO num_input_test(n1) select * from generate_series(0::numeric, 42::numeric, '-inf'::numeric);
ERROR:  step size cannot be infinity
--Testcase 1015:
SELECT n1 FROM num_input_test; 
 n1 
----
(0 rows)

-- Checks maximum, output is truncated
--Testcase 1016:
DELETE FROM num_input_test;
--Testcase 1017:
INSERT INTO num_input_test(n1) select (i / (10::numeric ^ 131071))::numeric(1,0)
	from generate_series(6 * (10::numeric ^ 131071),
			     9 * (10::numeric ^ 131071),
			     10::numeric ^ 131071) as a(i);
--Testcase 1018:
SELECT n1 AS numeric FROM num_input_test;
 numeric 
---------
       6
       7
       8
       9
(4 rows)

-- Check usage with variables
--Testcase 1019:
DELETE FROM num_test_calc;
--Testcase 1020:
INSERT INTO num_test_calc(n1, n2) select * from generate_series(1::numeric, 3::numeric) i, generate_series(i,3) j;
--Testcase 1021:
SELECT n1 as i, n2 as j FROM num_test_calc;
 i | j 
---+---
 1 | 1
 1 | 2
 1 | 3
 2 | 2
 2 | 3
 3 | 3
(6 rows)

--Testcase 1022:
DELETE FROM num_test_calc;
--Testcase 1023:
INSERT INTO num_test_calc(n1, n2) select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,i) j;
--Testcase 1024:
SELECT n1 as i, n2 as j FROM num_test_calc;
 i | j 
---+---
 1 | 1
 2 | 1
 2 | 2
 3 | 1
 3 | 2
 3 | 3
(6 rows)

--Testcase 1025:
DELETE FROM num_test_calc;
--Testcase 1026:
INSERT INTO num_test_calc(n1, n2) select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,5,i) j;
--Testcase 1027:
SELECT n1 as i, n2 as j FROM num_test_calc;
 i | j 
---+---
 1 | 1
 1 | 2
 1 | 3
 1 | 4
 1 | 5
 2 | 1
 2 | 3
 2 | 5
 3 | 1
 3 | 4
(10 rows)

--
-- Tests for LN()
--
-- Invalid inputs
--Testcase 1028:
DELETE FROM num_input_test;
--Testcase 1029:
INSERT INTO num_input_test(n1) values('-12.34');
--Testcase 1030:
SELECT ln(n1::numeric) FROM num_input_test;
ERROR:  cannot take logarithm of a negative number
--Testcase 1031:
DELETE FROM num_input_test;
--Testcase 1032:
INSERT INTO num_input_test(n1) values('0.0');
--Testcase 1033:
SELECT ln(n1::numeric) FROM num_input_test;
ERROR:  cannot take logarithm of zero
-- Some random tests
--Testcase 1034:
DELETE FROM num_input_test;
--Testcase 1035:
INSERT INTO num_input_test(n1) values(1.2345678e-28);
--Testcase 1036:
SELECT ln(n1::numeric) FROM num_input_test;
                   ln                    
-----------------------------------------
 -64.26166165451762991204894255882820859
(1 row)

--Testcase 1037:
DELETE FROM num_input_test;
--Testcase 1038:
INSERT INTO num_input_test(n1) values(0.0456789);
--Testcase 1039:
SELECT ln(n1::numeric) FROM num_input_test;
         ln          
---------------------
 -3.0861187944847439
(1 row)

--Testcase 1040:
DELETE FROM num_input_test;
--Testcase 1041:
INSERT INTO num_input_test(n1) values(0.349873948359354029493948309745709580730482050975);
--Testcase 1042:
SELECT ln(n1::numeric) FROM num_input_test;
         ln          
---------------------
 -1.0501823369120829
(1 row)

--Testcase 1043:
DELETE FROM num_input_test;
--Testcase 1044:
INSERT INTO num_input_test(n1) values(0.99949452);
--Testcase 1045:
SELECT ln(n1::numeric) FROM num_input_test;
           ln            
-------------------------
 -0.00050560779808326467
(1 row)

--Testcase 1046:
DELETE FROM num_input_test;
--Testcase 1047:
INSERT INTO num_input_test(n1) values(1.00049687395);
--Testcase 1048:
SELECT ln(n1::numeric) FROM num_input_test;
           ln           
------------------------
 0.00049675054901370394
(1 row)

--Testcase 1049:
DELETE FROM num_input_test;
--Testcase 1050:
INSERT INTO num_input_test(n1) values(1234.567890123456789);
--Testcase 1051:
SELECT ln(n1::numeric) FROM num_input_test;
         ln         
--------------------
 7.1184763012977922
(1 row)

--Testcase 1052:
DELETE FROM num_input_test;
--Testcase 1053:
INSERT INTO num_input_test(n1) values(5.80397490724e5);
--Testcase 1054:
SELECT ln(n1::numeric) FROM num_input_test;
         ln         
--------------------
 13.271468476626518
(1 row)

--Testcase 1055:
DELETE FROM num_input_test;
--Testcase 1056:
INSERT INTO num_input_test(n1) values(9.342536355e34);
--Testcase 1057:
SELECT ln(n1::numeric) FROM num_input_test;
         ln         
--------------------
 80.522470935524187
(1 row)

-- 
-- Tests for LOG() (base 10)
--
-- invalid inputs
--Testcase 1058:
DELETE FROM num_input_test;
--Testcase 1059:
INSERT INTO num_input_test(n1) values('-12.34');
--Testcase 1060:
SELECT log(n1::numeric) FROM num_input_test;
ERROR:  cannot take logarithm of a negative number
--Testcase 1061:
DELETE FROM num_input_test;
--Testcase 1062:
INSERT INTO num_input_test(n1) values('0.0');
--Testcase 1063:
SELECT log(n1::numeric) FROM num_input_test;
ERROR:  cannot take logarithm of zero
-- some random tests
--Testcase 1064:
DELETE FROM num_input_test;
--Testcase 1065:
INSERT INTO num_input_test(n1) values(1.234567e-89);
--Testcase 1066:
SELECT log(n1::numeric) FROM num_input_test;
                                                 log                                                 
-----------------------------------------------------------------------------------------------------
 -88.90848533591373725637496492944925187293052336306443143312825869985819779294142441287021741054275
(1 row)

--Testcase 1067:
DELETE FROM num_input_test;
--Testcase 1068:
INSERT INTO num_input_test(n1) values(3.4634998359873254962349856073435545);
--Testcase 1069:
SELECT log(n1::numeric) FROM num_input_test;
        log         
--------------------
 0.5395151714070140
(1 row)

--Testcase 1070:
DELETE FROM num_input_test;
--Testcase 1071:
INSERT INTO num_input_test(n1) values(9.999999999999999999);
--Testcase 1072:
SELECT log(n1::numeric) FROM num_input_test;
        log         
--------------------
 1.0000000000000000
(1 row)

--Testcase 1073:
DELETE FROM num_input_test;
--Testcase 1074:
INSERT INTO num_input_test(n1) values(10.00000000000000000);
--Testcase 1075:
SELECT log(n1::numeric) FROM num_input_test;
        log         
--------------------
 1.0000000000000000
(1 row)

--Testcase 1076:
DELETE FROM num_input_test;
--Testcase 1077:
INSERT INTO num_input_test(n1) values(10.00000000000000001);
--Testcase 1078:
SELECT log(n1::numeric) FROM num_input_test;
        log         
--------------------
 1.0000000000000000
(1 row)

--Testcase 1079:
DELETE FROM num_input_test;
--Testcase 1080:
INSERT INTO num_input_test(n1) values(590489.45235237);
--Testcase 1081:
SELECT log(n1::numeric) FROM num_input_test;
        log        
-------------------
 5.771212144411727
(1 row)

-- similar as above test. Basically, we can get float8 value and 
-- convert to numeric
-- Tests for LOG() (arbitrary base)
--
-- invalid inputs
--Testcase 1082:
DELETE FROM num_test_calc;
--Testcase 1083:
INSERT INTO num_test_calc(n1, n2) VALUES(-12.34, 56.78);
--Testcase 1084:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
ERROR:  cannot take logarithm of a negative number
--Testcase 1085:
DELETE FROM num_test_calc;
--Testcase 1086:
INSERT INTO num_test_calc(n1, n2) VALUES(-12.34, -56.78);
--Testcase 1087:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
ERROR:  cannot take logarithm of a negative number
--Testcase 1088:
DELETE FROM num_test_calc;
--Testcase 1089:
INSERT INTO num_test_calc(n1, n2) VALUES(12.34, -56.78);
--Testcase 1090:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
ERROR:  cannot take logarithm of a negative number
--Testcase 1091:
DELETE FROM num_test_calc;
--Testcase 1092:
INSERT INTO num_test_calc(n1, n2) VALUES(0.0, 12.34);
--Testcase 1093:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
ERROR:  cannot take logarithm of zero
--Testcase 1094:
DELETE FROM num_test_calc;
--Testcase 1095:
INSERT INTO num_test_calc(n1, n2) VALUES(12.34, 0.0);
--Testcase 1096:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
ERROR:  cannot take logarithm of zero
--Testcase 1097:
DELETE FROM num_test_calc;
--Testcase 1098:
INSERT INTO num_test_calc(n1, n2) VALUES(1.0, 12.34);
--Testcase 1099:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
ERROR:  division by zero
-- some random tests
--Testcase 1100:
DELETE FROM num_test_calc;
--Testcase 1101:
INSERT INTO num_test_calc(n1, n2) VALUES(1.23e-89, 6.4689e45);
--Testcase 1102:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
                                              log                                               
------------------------------------------------------------------------------------------------
 -0.5152489207781856983977054971756484879653568168479201885425588841094788842469115325262329756
(1 row)

--Testcase 1103:
DELETE FROM num_test_calc;
--Testcase 1104:
INSERT INTO num_test_calc(n1, n2) VALUES(0.99923, 4.58934e34);
--Testcase 1105:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
         log         
---------------------
 -103611.55579544132
(1 row)

--Testcase 1106:
DELETE FROM num_test_calc;
--Testcase 1107:
INSERT INTO num_test_calc(n1, n2) VALUES(1.000016, 8.452010e18);
--Testcase 1108:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
        log         
--------------------
 2723830.2877097365
(1 row)

--Testcase 1109:
DELETE FROM num_test_calc;
--Testcase 1110:
INSERT INTO num_test_calc(n1, n2) VALUES(3.1954752e47, 9.4792021e-73);
--Testcase 1111:
SELECT log(n1::numeric, n2::numeric) FROM num_test_calc;
                                         log                                         
-------------------------------------------------------------------------------------
 -1.51613372350688302142917386143459361608600157692779164475351842333265418126982165
(1 row)

--
-- Tests for scale()
--
--Testcase 1112:
DELETE FROM num_input_test;
--Testcase 1113:
INSERT INTO num_input_test(n1) values(numeric 'NaN');
--Testcase 1114:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
      
(1 row)

--Testcase 1115:
DELETE FROM num_input_test;
--Testcase 1116:
INSERT INTO num_input_test(n1) values(NULL::numeric);
--Testcase 1117:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
      
(1 row)

--Testcase 1118:
DELETE FROM num_input_test;
--Testcase 1119:
INSERT INTO num_input_test(n1) values(1.12);
--Testcase 1120:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
     2
(1 row)

--Testcase 1121:
DELETE FROM num_input_test;
--Testcase 1122:
INSERT INTO num_input_test(n1) values(0);
--Testcase 1123:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
     0
(1 row)

--Testcase 1124:
DELETE FROM num_input_test;
--Testcase 1125:
INSERT INTO num_input_test(n1) values(0.00);
--Testcase 1126:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
     0
(1 row)

--Testcase 1127:
DELETE FROM num_input_test;
--Testcase 1128:
INSERT INTO num_input_test(n1) values(1.12345);
--Testcase 1129:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
     5
(1 row)

--Testcase 1130:
DELETE FROM num_input_test;
--Testcase 1131:
INSERT INTO num_input_test(n1) values(110123.12475871856128);
--Testcase 1132:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
     9
(1 row)

--Testcase 1133:
DELETE FROM num_input_test;
--Testcase 1134:
INSERT INTO num_input_test(n1) values(-1123.12471856128);
--Testcase 1135:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
    11
(1 row)

--Testcase 1136:
DELETE FROM num_input_test;
--Testcase 1137:
INSERT INTO num_input_test(n1) values(-13.000000000000000);
--Testcase 1138:
SELECT scale(n1::numeric) FROM num_input_test;
 scale 
-------
     0
(1 row)

--
-- Tests for min_scale()
--
--Testcase 1139:
DELETE FROM num_input_test;
--Testcase 1140:
INSERT INTO num_input_test(n1) values(numeric 'NaN');
--Testcase 1141:
SELECT min_scale(n1::numeric) is NULL FROM num_input_test; -- should be true
 ?column? 
----------
 t
(1 row)

--Testcase 1142:
DELETE FROM num_input_test;
--Testcase 1143:
INSERT INTO num_input_test(n1) values(numeric 'inf');
--Testcase 1144:
SELECT min_scale(n1::numeric) is NULL FROM num_input_test; -- should be true
 ?column? 
----------
 t
(1 row)

--Testcase 1145:
DELETE FROM num_input_test;
--Testcase 1146:
INSERT INTO num_input_test(n1) values(0);
--Testcase 1147:
SELECT min_scale(n1::numeric) FROM num_input_test; -- no digits
 min_scale 
-----------
         0
(1 row)

--Testcase 1148:
DELETE FROM num_input_test;
--Testcase 1149:
INSERT INTO num_input_test(n1) values(0.00);
--Testcase 1150:
SELECT min_scale(n1::numeric) FROM num_input_test; -- no digits again
 min_scale 
-----------
         0
(1 row)

--Testcase 1151:
DELETE FROM num_input_test;
--Testcase 1152:
INSERT INTO num_input_test(n1) values(1.0);
--Testcase 1153:
SELECT min_scale(n1::numeric) FROM num_input_test; -- no scale
 min_scale 
-----------
         0
(1 row)

--Testcase 1154:
DELETE FROM num_input_test;
--Testcase 1155:
INSERT INTO num_input_test(n1) values(1.1);
--Testcase 1156:
SELECT min_scale(n1::numeric) FROM num_input_test; -- scale 1
 min_scale 
-----------
         1
(1 row)

--Testcase 1157:
DELETE FROM num_input_test;
--Testcase 1158:
INSERT INTO num_input_test(n1) values(1.12);
--Testcase 1159:
SELECT min_scale(n1::numeric) FROM num_input_test; -- scale 2
 min_scale 
-----------
         2
(1 row)

--Testcase 1160:
DELETE FROM num_input_test;
--Testcase 1161:
INSERT INTO num_input_test(n1) values(1.123);
--Testcase 1162:
SELECT min_scale(n1::numeric) FROM num_input_test; -- scale 3
 min_scale 
-----------
         3
(1 row)

--Testcase 1163:
DELETE FROM num_input_test;
--Testcase 1164:
INSERT INTO num_input_test(n1) values(1.1234);
--Testcase 1165:
SELECT min_scale(n1::numeric) FROM num_input_test; -- scale 4, filled digit
 min_scale 
-----------
         4
(1 row)

--Testcase 1166:
DELETE FROM num_input_test;
--Testcase 1167:
INSERT INTO num_input_test(n1) values(1.12345);
--Testcase 1168:
SELECT min_scale(n1::numeric) FROM num_input_test; -- scale 5, 2 NDIGITS
 min_scale 
-----------
         5
(1 row)

--Testcase 1169:
DELETE FROM num_input_test;
--Testcase 1170:
INSERT INTO num_input_test(n1) values(1.1000);
--Testcase 1171:
SELECT min_scale(n1::numeric) FROM num_input_test; -- 1 pos in NDIGITS
 min_scale 
-----------
         1
(1 row)

--Testcase 1172:
DELETE FROM num_input_test;
--Testcase 1173:
INSERT INTO num_input_test(n1) values(1e100);
--Testcase 1174:
SELECT min_scale(n1::numeric) FROM num_input_test; -- very big number
 min_scale 
-----------
         0
(1 row)

--
-- Tests for trim_scale()
--
--Testcase 1175:
DELETE FROM num_input_test;
--Testcase 1176:
INSERT INTO num_input_test(n1) values(numeric 'NaN');
--Testcase 1177:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
        NaN
(1 row)

--Testcase 1178:
DELETE FROM num_input_test;
--Testcase 1179:
INSERT INTO num_input_test(n1) values(numeric 'inf');
--Testcase 1180:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
   Infinity
(1 row)

--Testcase 1181:
DELETE FROM num_input_test;
--Testcase 1182:
INSERT INTO num_input_test(n1) values(1.120);
--Testcase 1183:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
       1.12
(1 row)

--Testcase 1184:
DELETE FROM num_input_test;
--Testcase 1185:
INSERT INTO num_input_test(n1) values(0);
--Testcase 1186:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
          0
(1 row)

--Testcase 1187:
DELETE FROM num_input_test;
--Testcase 1188:
INSERT INTO num_input_test(n1) values(0.00);
--Testcase 1189:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
          0
(1 row)

--Testcase 1190:
DELETE FROM num_input_test;
--Testcase 1191:
INSERT INTO num_input_test(n1) values(1.1234500);
--Testcase 1192:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
    1.12345
(1 row)

--Testcase 1193:
DELETE FROM num_input_test;
--Testcase 1194:
INSERT INTO num_input_test(n1) values(110123.12475871856128000);
--Testcase 1195:
SELECT trim_scale(n1::numeric) FROM num_input_test;
    trim_scale    
------------------
 110123.124758719
(1 row)

--Testcase 1196:
DELETE FROM num_input_test;
--Testcase 1197:
INSERT INTO num_input_test(n1) values(-1123.124718561280000000);
--Testcase 1198:
SELECT trim_scale(n1::numeric) FROM num_input_test;
    trim_scale     
-------------------
 -1123.12471856128
(1 row)

--Testcase 1199:
DELETE FROM num_input_test;
--Testcase 1200:
INSERT INTO num_input_test(n1) values(-13.00000000000000000000);
--Testcase 1201:
SELECT trim_scale(n1::numeric) FROM num_input_test;
 trim_scale 
------------
        -13
(1 row)

--Testcase 1202:
DELETE FROM num_input_test;
--Testcase 1203:
INSERT INTO num_input_test(n1) values(1e100);
--Testcase 1204:
SELECT trim_scale(n1::numeric) FROM num_input_test;
                                              trim_scale                                               
-------------------------------------------------------------------------------------------------------
 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
(1 row)

--
-- Tests for SUM()
--
-- cases that need carry propagation
--Testcase 1205:
DELETE FROM num_input_test;
--Testcase 1206:
INSERT INTO num_input_test(n1) values(generate_series(1, 100000));
--Testcase 1207:
SELECT SUM(9999::numeric) FROM num_input_test;
    sum    
-----------
 999900000
(1 row)

--Testcase 1208:
SELECT SUM((-9999)::numeric) FROM num_input_test;
    sum     
------------
 -999900000
(1 row)

--
-- Tests for VARIANCE()
-- Failed for high precision and scale test case.
--
CREATE FOREIGN TABLE num_variance (id serial options (rowkey 'true'), a float8) SERVER griddb_svr;
INSERT INTO num_variance(a) VALUES (0);
INSERT INTO num_variance(a) VALUES (3e-500)
INSERT INTO num_variance(a) VALUES (-3e-500);
ERROR:  syntax error at or near "INSERT"
LINE 2: INSERT INTO num_variance(a) VALUES (-3e-500);
        ^
INSERT INTO num_variance(a) VALUES (4e-500 - 1e-16383);
is out of range for type double precision
INSERT INTO num_variance(a) VALUES (-4e-500 + 1e-16383);
is out of range for type double precision
-- variance is just under 12.5e-1000 and so should round down to 12e-1000
SELECT trim_scale(variance(a::numeric) * 1e1000) FROM num_variance;
 trim_scale 
------------
           
(1 row)

-- check that parallel execution produces the same result
BEGIN;
-- ALTER FOREIGN TABLE num_variance SET (parallel_workers = 4); -- foreign table does not support parallel_workers option
SET LOCAL parallel_setup_cost = 0;
SET LOCAL max_parallel_workers_per_gather = 4;
SELECT trim_scale(variance(a::numeric) * 1e1000) FROM num_variance;
 trim_scale 
------------
           
(1 row)

ROLLBACK;
-- case where sum of squares would overflow but variance does not
DELETE FROM num_variance;
INSERT INTO num_variance(a) SELECT 9e131071 + x FROM generate_series(1, 5) x;
is out of range for type double precision
SELECT variance(a::numeric) FROM num_variance;
 variance 
----------
         
(1 row)

-- check that parallel execution produces the same result
BEGIN;
-- ALTER FOREIGN TABLE num_variance SET (parallel_workers = 4); -- foreign table does not support parallel_workers option
SET LOCAL parallel_setup_cost = 0;
SET LOCAL max_parallel_workers_per_gather = 4;
SELECT variance(a::numeric) FROM num_variance;
 variance 
----------
         
(1 row)

ROLLBACK;
--
-- Tests for GCD()
--
--Testcase 1209:
DELETE FROM num_test_calc;
--Testcase 1210:
INSERT INTO num_test_calc(n1, n2) VALUES
             (0::numeric, 0::numeric),
             (0::numeric, numeric 'NaN'),
             (0::numeric, 46375::numeric),
             (433125::numeric, 46375::numeric),
             (43312.5::numeric, 4637.5::numeric),
             (4331.250::numeric, 463.75000::numeric),
             ('inf', '0'),
             ('inf', '42'),
             ('inf', 'inf');
--Testcase 1211:
SELECT n1 as a, n2 as b, gcd(n1::numeric, n2::numeric), gcd(n1::numeric, -n2::numeric), gcd(-n2::numeric, n1::numeric), gcd(-n2::numeric, -n1::numeric) FROM num_test_calc;
    a     |    b     |  gcd  |  gcd  |  gcd  |  gcd  
----------+----------+-------+-------+-------+-------
        0 |        0 |     0 |     0 |     0 |     0
        0 |      NaN |   NaN |   NaN |   NaN |   NaN
        0 |    46375 | 46375 | 46375 | 46375 | 46375
   433125 |    46375 |   875 |   875 |   875 |   875
  43312.5 |   4637.5 |  87.5 |  87.5 |  87.5 |  87.5
  4331.25 |   463.75 |  8.75 |  8.75 |  8.75 |  8.75
 Infinity |        0 |   NaN |   NaN |   NaN |   NaN
 Infinity |       42 |   NaN |   NaN |   NaN |   NaN
 Infinity | Infinity |   NaN |   NaN |   NaN |   NaN
(9 rows)

--
-- Tests for LCM()
--
--Testcase 1212:
DELETE FROM num_test_calc;
--Testcase 1213:
INSERT INTO num_test_calc(n1, n2) VALUES
             (0::numeric, 0::numeric),
             (0::numeric, numeric 'NaN'),
             (0::numeric, 13272::numeric),
             (13272::numeric, 13272::numeric),
             (423282::numeric, 13272::numeric),
             (42328.2::numeric, 1327.2::numeric),
             (4232.820::numeric, 132.72000::numeric),
             ('inf', '0'),
             ('inf', '42'),
             ('inf', 'inf');
--Testcase 1214:
SELECT n1 as a, n2 as b, lcm(n1::numeric, n2::numeric), lcm(n1::numeric, -n2::numeric), lcm(-n2::numeric, n1::numeric), lcm(-n2::numeric, -n1::numeric) FROM num_test_calc;
    a     |    b     |    lcm    |    lcm    |    lcm    |    lcm    
----------+----------+-----------+-----------+-----------+-----------
        0 |        0 |         0 |         0 |         0 |         0
        0 |      NaN |       NaN |       NaN |       NaN |       NaN
        0 |    13272 |         0 |         0 |         0 |         0
    13272 |    13272 |     13272 |     13272 |     13272 |     13272
   423282 |    13272 |  11851896 |  11851896 |  11851896 |  11851896
  42328.2 |   1327.2 | 1185189.6 | 1185189.6 | 1185189.6 | 1185189.6
  4232.82 |   132.72 | 118518.96 | 118518.96 | 118518.96 | 118518.96
 Infinity |        0 |       NaN |       NaN |       NaN |       NaN
 Infinity |       42 |       NaN |       NaN |       NaN |       NaN
 Infinity | Infinity |       NaN |       NaN |       NaN |       NaN
(10 rows)

--Testcase 1215:
DELETE FROM num_test_calc;
--Testcase 1216:
INSERT INTO num_test_calc(n1, n2) VALUES (10::numeric, 131068);
--Testcase 1217:
SELECT lcm((9999 * (n1::numeric)^n2::numeric + (n1::numeric^n2::numeric - 1)), 2) FROM num_test_calc; -- overflow
ERROR:  value overflows numeric format
--
-- Tests for factorial
--
--Testcase 1218:
CREATE FOREIGN TABLE num_test_int (
    id serial options (rowkey 'true'),
    x bigint
) SERVER griddb_svr;
--Testcase 1219:
DELETE FROM num_test_int;
--Testcase 1220:
INSERT INTO num_test_int(x) VALUES (4::numeric);
--Testcase 1221:
SELECT factorial(x::int) FROM num_test_int;
 factorial 
-----------
        24
(1 row)

--Testcase 1222:
DELETE FROM num_test_int;
--Testcase 1223:
INSERT INTO num_test_int(x) VALUES (15::numeric);
--Testcase 1224:
SELECT factorial(x::int) FROM num_test_int;
   factorial   
---------------
 1307674368000
(1 row)

--Testcase 1225:
DELETE FROM num_test_int;
--Testcase 1226:
INSERT INTO num_test_int(x) VALUES (100000::numeric);
--Testcase 1227:
SELECT factorial(x::int) FROM num_test_int;
ERROR:  value overflows numeric format
--Testcase 1228:
DELETE FROM num_test_int;
--Testcase 1229:
INSERT INTO num_test_int(x) VALUES (0::numeric);
--Testcase 1230:
SELECT factorial(x::int) FROM num_test_int;
 factorial 
-----------
         1
(1 row)

--Testcase 1231:
DELETE FROM num_test_int;
--Testcase 1232:
INSERT INTO num_test_int(x) VALUES (-4::numeric);
--Testcase 1233:
SELECT factorial(x::int) FROM num_test_int;
ERROR:  factorial of a negative number is undefined
--
-- Tests for pg_lsn()
--
--Testcase 1234:
DELETE FROM num_test_int;
--Testcase 1235:
INSERT INTO num_test_int(x) VALUES (23783416::numeric);
--Testcase 1236:
SELECT pg_lsn(x::numeric) FROM num_test_int;
  pg_lsn   
-----------
 0/16AE7F8
(1 row)

--Testcase 1237:
DELETE FROM num_test_int;
--Testcase 1238:
INSERT INTO num_test_int(x) VALUES (0::numeric);
--Testcase 1239:
SELECT pg_lsn(x::numeric) FROM num_test_int;
 pg_lsn 
--------
 0/0
(1 row)

--Testcase 1240:
DELETE FROM num_test_int;
--Testcase 1241:
INSERT INTO num_test_int(x) VALUES (18446744073709551615::numeric);
ERROR:  bigint out of range
--Testcase 1242:
SELECT pg_lsn(x::numeric) FROM num_test_int;
 pg_lsn 
--------
(0 rows)

--Testcase 1243:
DELETE FROM num_test_int;
--Testcase 1244:
INSERT INTO num_test_int(x) VALUES (-1::numeric);
--Testcase 1245:
SELECT pg_lsn(x::numeric) FROM num_test_int;
ERROR:  pg_lsn out of range
--Testcase 1246:
DELETE FROM num_test_int;
--Testcase 1247:
INSERT INTO num_test_int(x) VALUES (18446744073709551616::numeric);
ERROR:  bigint out of range
--Testcase 1248:
SELECT pg_lsn(x::numeric) FROM num_test_int;
 pg_lsn 
--------
(0 rows)

--Testcase 1249:
DELETE FROM num_test_int;
--Testcase 1250:
INSERT INTO num_test_int(x) VALUES ('NaN'::numeric);
ERROR:  cannot convert NaN to bigint
--Testcase 1251:
SELECT pg_lsn(x::numeric) FROM num_test_int;
 pg_lsn 
--------
(0 rows)

--Testcase 1252:
DROP FOREIGN TABLE width_bucket_tbl;
--Testcase 1253:
DROP FOREIGN TABLE num_test_calc;
DROP FOREIGN TABLE num_typemod_test;
--Testcase 1254:
DROP FOREIGN TABLE num_test_int;
--Testcase 1255:
DROP FOREIGN TABLE num_data;
--Testcase 1256:
DROP FOREIGN TABLE num_exp_add;
--Testcase 1257:
DROP FOREIGN TABLE num_exp_sub;
--Testcase 1258:
DROP FOREIGN TABLE num_exp_div;
--Testcase 1259:
DROP FOREIGN TABLE num_exp_mul;
--Testcase 1260:
DROP FOREIGN TABLE num_exp_sqrt;
--Testcase 1261:
DROP FOREIGN TABLE num_exp_ln;
--Testcase 1262:
DROP FOREIGN TABLE num_exp_log10;
--Testcase 1263:
DROP FOREIGN TABLE num_exp_power_10_ln;
--Testcase 1264:
DROP FOREIGN TABLE num_result;
--Testcase 1265:
DROP FOREIGN TABLE num_input_test;
DROP FOREIGN TABLE num_variance;
--Testcase 1266:
DROP FOREIGN TABLE v;
--Testcase 1267:
DROP FOREIGN TABLE ceil_floor_round;
--Testcase 1268:
DROP USER MAPPING FOR public SERVER griddb_svr;
--Testcase 1269:
DROP SERVER griddb_svr CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to foreign table int8_tmp
drop cascades to foreign table int4_tmp
drop cascades to foreign table int2_tmp
drop cascades to foreign table non_error_throwing_api
--Testcase 1270:
DROP EXTENSION griddb_fdw CASCADE;
